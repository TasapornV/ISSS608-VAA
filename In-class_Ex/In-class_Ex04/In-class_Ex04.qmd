---
title: "In-class Exercise 4"
author: "Tasaporn Visawameteekul"
date: 04 February 2023
date-modified: "`r Sys.Date()`"
execute: 
  echo: true
  eval: true
  warning: false
format: html
toc: true
editor: visual
---

Getting Started

# Install and launching R packages

Two packages will be installed and loaded. They are: tidyverse, ggiraph

```{r}
pacman::p_load(plotly, DT, patchwork, tidyverse)
```

Importing data

```{r, warning = FALSE, message=FALSE}
exam_data <- read_csv("data/Exam_data.csv")
head(exam_data, n=5)
```

### Working with visual variable: plot_ly() method

```{r, message = FALSE}
plot_ly(data = exam_data, 
        x = ~ENGLISH,
        y = ~MATHS,
        color = ~RACE,
        colors = "Set1") #<<
```

```{r, message = FALSE, warning = FALSE}
p <- ggplot(data=exam_data, 
            aes(x = MATHS,
                y = ENGLISH)) +
  geom_point(dotsize = 1) +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100))
ggplotly(p) #<<
```

# Install and launching

```{r, warning=FALSE, message=FALSE, hide=TRUE}
pacman::p_load(ggstatsplot, tidyverse)
library(ggstatsplot)
```

# Importing the data

```{r}
exam <- read.csv("data/Exam_data.csv")
head(exam, n=10)
```

## One-sample test: gghistostats() method

easystats: <https://easystats.github.io/easystats/>

```{r}
set.seed(1234)

gghistostats(
  data = exam,
  x = ENGLISH,
  type = "bayes",
  test.value = 60,
  xlab = "English scores"
)
```

## Two-sample mean test: *ggbetweenstats()*

```{r}
ggbetweenstats(
  data = exam,
  x = GENDER, 
  y = MATHS,
  type = "np",
  messages = FALSE
)
```

## Oneway ANOVA Test: *ggbetweenstats()* method

```{r}
ggbetweenstats(
  data = exam,
  x = RACE, 
  y = ENGLISH,
  type = "p",
  mean.ci = TRUE, 
  pairwise.comparisons = TRUE, 
  pairwise.display = "s",
  p.adjust.method = "fdr",
  messages = FALSE
)
```

## Significant Test of Correlation: *ggscatterstats()*

```{r}
ggscatterstats(
  data = exam,
  x = MATHS,
  y = ENGLISH,
  marginal = FALSE,
  )
```

## Significant Test of Association (Depedence) : *ggbarstats()* methods

```{r}
exam1 <- exam %>% 
  mutate(MATHS_bins = 
           cut(MATHS, 
               breaks = c(0,60,75,85,100))
)
```

```{r}
ggbarstats(exam1, 
           x = MATHS_bins, 
           y = GENDER)
```

# Visualising models

```{r, warning=FALSE, message=FALSE}
pacman::p_load(readxl, performance, parameters, see)
```

## Importing Excel file: readxl methods

```{r}
car_resale <- read_xls("data/ToyotaCorolla.xls", 
                       "data")
car_resale
```

## Multiple Regression Model using lm()

```{r}
model <- lm(Price ~ Age_08_04 + Mfg_Year + KM + 
              Weight + Guarantee_Period, data = car_resale)
model
```

## Model Diagnostic: checking for multicolinearity:

```{r}
check_collinearity(model)
```

```{r}
check_c <- check_collinearity(model)
plot(check_c)
```

### Model Diagnostic: checking normality assumption

```{r}
model1 <- lm(Price ~ Age_08_04 + KM + 
              Weight + Guarantee_Period, data = car_resale)
```

```{r}
check_n <- check_normality(model1)
```

```{r}
plot(check_n)
```

## Model Diagnostic: Check model for homogeneity of variances

```{r}
check_h <- check_heteroscedasticity(model1)
```

```{r}
plot(check_h)
```

## Model Diagnostic: Complete check

```{r}
check_model(model1)
```

## Visualising Regression Parameters: see methods

```{r}
plot(parameters(model1))
```

## Visualising Regression Parameters: *ggcoefstats()* methods

```{r}
ggcoefstats(model1, 
            output = "plot")
```

# Visualising Uncertainty

```{r, warning=FALSE, message=FALSE}
pacman::p_load(tidyverse, plotly, crosstalk, DT, ggdist, gganimate)
```

```{r}
my_sum <- exam %>%
  group_by(RACE) %>%
  summarise(
    n=n(),
    mean=mean(MATHS),
    sd=sd(MATHS)
    ) %>%
  mutate(se=sd/sqrt(n-1))
```

```{r}
knitr::kable(head(my_sum), format = 'html')
```

## Visualizing the uncertainty of point estimates: ggplot2 methods

```{r}
ggplot(my_sum) +
  geom_errorbar(
    aes(x=RACE, 
        ymin=mean-se, 
        ymax=mean+se), 
    width=0.2, 
    colour="black", 
    alpha=0.9, 
    size=0.5) +
  geom_point(aes
           (x=RACE, 
            y=mean), 
           stat="identity", 
           color="red",
           size = 1.5,
           alpha=1) +
  ggtitle("Standard error of mean 
          maths score by rac")
```

### Visualizing the uncertainty of point estimates: **ggplot2** methods

Plot the 95% confidence interval of mean maths score by race. The error bars should be sorted by the average maths scores.

```{r}
ggplot(my_sum) +
  geom_errorbar(
    aes(x=sort(RACE),
        ymin=mean-se,
        ymax=mean+se),
    width=0.2,
    colour="black",
    alpha=0.95,
    size=0.5) +
  geom_point(aes
           (x=RACE,
            y=mean),
           stat="identity",
           color="red",
           size = 1.5,
           alpha=1) +
  ggtitle("Standard error of mean 
          maths score by rac")
```
