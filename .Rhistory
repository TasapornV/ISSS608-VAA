filter(Year == "2022") %>%
select("town", "flat_type", "storey_range", "floor_area_sqm", "lease_commence_date", "resale_price", "Year", "Month")
summarize(Resale)
Resale <- Resale %>%
filter(Year == "2022") %>%
select("town", "flat_type", "storey_range", "floor_area_sqm", "lease_commence_date", "resale_price", "Year", "Month")
summarise(Resale)
Resale <- Resale %>%
filter(Year == "2022") %>%
select("town", "flat_type", "storey_range", "floor_area_sqm", "lease_commence_date", "resale_price", "Year", "Month")
summaryResale)
Resale <- Resale %>%
filter(Year == "2022") %>%
select("town", "flat_type", "storey_range", "floor_area_sqm", "lease_commence_date", "resale_price", "Year", "Month")
summary(Resale)
Resale <- Resale %>%
filter(Year == "2022") %>%
select("town", "flat_type", "storey_range", "floor_area_sqm", "lease_commence_date", "resale_price", "Year", "Month")
Resale <- Resale %>%
filter(flat_type %in% c("3 ROOM","4 ROOM", "5 ROOM"))
Resale$resale_price = Resale$resale_price/1000
Resale <- Resale %>%
rename('resale_price_kSGD' = 'resale_price')
Resale
Resale <-Resale_raw %>%
separate(`month`, into = c("Year", "Month"), sep = "-") %>%
filter(Year == "2022") %>%
select("town", "flat_type", "storey_range", "floor_area_sqm", "lease_commence_date", "resale_price", "Year", "Month")
Resale$resale_price = Resale$resale_price/1000
Resale <- Resale %>%
rename('resale_price_kSGD' = 'resale_price')
Resale
Resale <- Resale %>%
filter(flat_type %in% c("3 ROOM","4 ROOM", "5 ROOM"))
Resale$resale_price = Resale$resale_price/1000
Resale <-Resale_raw %>%
separate(`month`, into = c("Year", "Month"), sep = "-") %>%
filter(Year == "2022") %>%
select("town", "flat_type", "storey_range", "floor_area_sqm", "lease_commence_date", "resale_price", "Year", "Month")
Resale <- Resale %>%
filter(flat_type %in% c("3 ROOM","4 ROOM", "5 ROOM"))
Resale$resale_price = Resale$resale_price/1000
Resale <- Resale %>%
rename('resale_price_kSGD' = 'resale_price')
Resale
View(Resale)
set.seed(1234)
gghistostats(
data = Resale,
x = 'resale_price_kSGD',
type = "bayes",
test.value = 60,
xlab = "resale_price (kSGD)"
)
set.seed(1234)
gghistostats(
data = Resale,
x = 'floor_area_sqm',
type = "bayes",
test.value = 60,
xlab = "floor_area_sqm"
)
ggbetweenstats(
data = Resale,
x = 'flat_type',
y = 'resale_price_kSGD',
type = "np",
messages = FALSE
)
qplot(data=Resale, x=flat_type, y=resale_price_kSGD, geom="boxplot")
?qplot
qplot(data=Resale, x=flat_type, y=resale_price_kSGD, geom="dotplot")
qplot(data=Resale, x=flat_type, y=resale_price_kSGD, geom="boxplot")
qplot(data=Resale, x=flat_type, y=resale_price_kSGD, geom=c("boxplot", "jitter"))
qplot(data=Resale, x=flat_type, y=resale_price_kSGD, geom= "boxplot")
qplot(data=Resale, x=flat_type, y=resale_price_kSGD, geom= "boxplot", fill = flat_type)
# Use single color
ggplot(Resale, aes(x=flat_type, y=resale_price_kSGD)) +
geom_boxplot(fill='#A4A4A4', color="black")+
theme_classic()
# Change box plot colors by groups
p<-ggplot(Resale, aes(x=flat_type, y=resale_price_kSGD, fill=flat_type)) +
geom_boxplot()
p
# Use single color
ggplot(Resale, aes(x=flat_type, y=resale_price_kSGD)) +
geom_boxplot(fill='#A4A4A4', color="black")+
theme_classic()
# Change box plot colors by groups
p<-ggplot(Resale, aes(x=flat_type, y=resale_price_kSGD, fill=flat_type)) +
geom_boxplot()
# Remove legend
p + theme(legend.position="none")
p
# Use single color
ggplot(Resale, aes(x=flat_type, y=resale_price_kSGD)) +
geom_boxplot(fill='#A4A4A4', color="black")+
theme_classic()
# Change box plot colors by groups
p<-ggplot(Resale, aes(x=flat_type, y=resale_price_kSGD, fill=flat_type)) +
geom_boxplot() +
theme(legend.position="none")
# Remove legend
p
# Change box plot colors by groups
p<-ggplot(Resale, aes(x=town, y=resale_price_kSGD, fill=town)) +
geom_boxplot() +
theme(legend.position="none")
# Remove legend
p
p<-ggplot(Resale, aes(x=town, y=resale_price_kSGD)) +
geom_boxplot() +
theme(legend.position="none") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p
# Use single color
ggplot(Resale, aes(x=flat_type, y=resale_price_kSGD)) +
geom_boxplot(fill='#A4A4A4', color="black")+
theme_classic()
# Change box plot colors by groups
p<-ggplot(Resale, aes(x=flat_type, y=resale_price_kSGD, fill=flat_type)) +
geom_boxplot() +
stat_summary(fun.y=mean, geom="point", shape=20, size=14, color="red", fill="red") +
theme(legend.position="none")
# Remove legend
p
# Use single color
ggplot(Resale, aes(x=flat_type, y=resale_price_kSGD)) +
geom_boxplot(fill='#A4A4A4', color="black")+
theme_classic()
# Change box plot colors by groups
p<-ggplot(Resale, aes(x=flat_type, y=resale_price_kSGD, fill=flat_type)) +
geom_boxplot() +
stat_summary(fun.y=mean, geom="point", shape=20, size=14) +
theme(legend.position="none")
# Remove legend
p
# Use single color
ggplot(Resale, aes(x=flat_type, y=resale_price_kSGD)) +
geom_boxplot(fill='#A4A4A4', color="black")+
theme_classic()
# Change box plot colors by groups
p<-ggplot(Resale, aes(x=flat_type, y=resale_price_kSGD, fill=flat_type)) +
geom_boxplot() +
stat_summary(fun.y=mean, geom="point") +
theme(legend.position="none")
# Remove legend
p
# Use single color
ggplot(Resale, aes(x=flat_type, y=resale_price_kSGD)) +
geom_boxplot(fill='#A4A4A4', color="black")+
theme_classic()
# Change box plot colors by groups
p<-ggplot(Resale, aes(x=flat_type, y=resale_price_kSGD, fill=flat_type)) +
geom_boxplot() +
stat_summary(fun.y=mean, geom="point", fill="red") +
theme(legend.position="none")
# Remove legend
p
# Use single color
ggplot(Resale, aes(x=flat_type, y=resale_price_kSGD)) +
geom_boxplot(fill='#A4A4A4', color="black")+
theme_classic()
# Change box plot colors by groups
p<-ggplot(Resale, aes(x=flat_type, y=resale_price_kSGD, fill=flat_type)) +
geom_boxplot() +
stat_summary(fun.y=mean, geom="point", color="red") +
theme(legend.position="none")
# Remove legend
p
# Use single color
ggplot(Resale, aes(x=flat_type, y=resale_price_kSGD)) +
geom_boxplot(fill='#A4A4A4', color="black")+
stat_summary(fun.y=mean, geom="point") +
theme_classic()
# Change box plot colors by groups
p<-ggplot(Resale, aes(x=flat_type, y=resale_price_kSGD, fill=flat_type)) +
geom_boxplot() +
stat_summary(fun.y=mean, geom="point", color="red") +
theme(legend.position="none")
# Remove legend
p
Resale %>%
arrange(resale_price_kSGD) %>%    # First sort by val.
mutate(town=factor(town, levels=town)) %>%   # This trick update the factor levels
ggplot(Resale, aes(x=town, y=resale_price_kSGD)) +
geom_boxplot() +
theme(legend.position="none") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
Resale %>%
arrange(resale_price_kSGD) %>%    # First sort by val.
# mutate(town=factor(town, levels=town)) %>%   # This trick update the factor levels
ggplot(Resale, aes(x=town, y=resale_price_kSGD)) +
geom_boxplot() +
theme(legend.position="none") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
Resale %>%
arrange(resale_price_kSGD) %>%    # First sort by val.
mutate(town=factor('town', levels='town')) %>%   # This trick update the factor levels
ggplot(Resale, aes(x=town, y=resale_price_kSGD)) +
geom_boxplot() +
theme(legend.position="none") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
# Use single color
ggplot(Resale, aes(x=flat_type, y=resale_price_kSGD)) +
geom_boxplot(fill='#A4A4A4', color="black")+
stat_summary(fun.y=mean, geom="point") +
theme_classic()
# Change box plot colors by groups
p<-ggplot(Resale, aes(x=flat_type, y=resale_price_kSGD, fill=flat_type)) +
geom_boxplot() +
stat_summary(fun.y=mean, geom="point", color="red") +
theme(legend.position="none")
# Remove legend
p
Resale %>%
arrange(resale_price_kSGD) %>%    # First sort by val.
mutate(town=factor('town', levels='town')) %>%   # This trick update the factor levels
ggplot(Resale, aes(x=town, y=resale_price_kSGD)) +
geom_boxplot() +
theme(legend.position="none") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
Resale %>%
arrange(resale_price_kSGD) %>%    # First sort by val.
mutate(town=factor(town, levels=town)) %>%   # This trick update the factor levels
ggplot(Resale, aes(x=town, y=resale_price_kSGD)) +
geom_boxplot() +
theme(legend.position="none") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
Resale %>%
arrange(resale_price_kSGD) %>%    # First sort by val.
mutate(town=factor(town, levels=town)) %>%   # This trick update the factor levels
ggplot(Resale, aes(x=town, y=resale_price_kSGD)) +
geom_boxplot() +
theme(legend.position="none") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
Resale %>%
arrange(resale_price_kSGD) %>%    # First sort by val.
mutate(town = factor(town, levels=town)) %>%   # This trick update the factor levels
ggplot(Resale, aes(x=town, y=resale_price_kSGD)) +
geom_boxplot() +
theme(legend.position="none") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
?factor
Resale %>%
arrange(resale_price_kSGD) %>%    # First sort by val.
mutate(town = factor(town)) %>%   # This trick update the factor levels
ggplot(Resale, aes(x=town, y=resale_price_kSGD)) +
geom_boxplot() +
theme(legend.position="none") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
Resale %>%
arrange(resale_price_kSGD) %>%    # First sort by val.
mutate(town = factor(town, levels(town))) %>%   # This trick update the factor levels
ggplot(Resale, aes(x=town, y=resale_price_kSGD)) +
geom_boxplot() +
theme(legend.position="none") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
Resale %>%
arrange(resale_price_kSGD) %>%    # First sort by val.
mutate(town = factor(town, levels(town))) %>%   # This trick update the factor levels
# ggplot(Resale, aes(x=town, y=resale_price_kSGD)) +
# geom_boxplot() +
# theme(legend.position="none") +
# theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
Resale %>%
arrange(resale_price_kSGD) %>%    # First sort by val.
mutate(town = factor(town, levels(town)))
# %>%   # This trick update the factor levels
# ggplot(Resale, aes(x=town, y=resale_price_kSGD)) +
# geom_boxplot() +
# theme(legend.position="none") +
# theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
Resale %>%
arrange(resale_price_kSGD) %>%    # First sort by val.
mutate(town = factor(town, levels(town)))
# %>%   # This trick update the factor levels
%>% ggplot(Resale, aes(x=town, y=resale_price_kSGD))
Resale %>%
arrange(resale_price_kSGD) %>%    # First sort by val.
mutate(town = factor(town, levels(town))) %>%
# %>%   # This trick update the factor levels
ggplot(Resale, aes(x=town, y=resale_price_kSGD))
Resale %>%
arrange(resale_price_kSGD) %>%    # First sort by val.
mutate(town = factor(town, levels(town))) %>%
# %>%   # This trick update the factor levels
ggplot( aes(x=town, y=resale_price_kSGD))
# +
# geom_boxplot() +
# theme(legend.position="none") +
# theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
Resale %>%
arrange(resale_price_kSGD) %>%    # First sort by val.
mutate(town = factor(town, levels(town))) %>%
# %>%   # This trick update the factor levels
ggplot( aes(x=town, y=resale_price_kSGD))+
# +
geom_boxplot() +
theme(legend.position="none") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
Resale %>%
arrange(resale_price_kSGD) %>%    # First sort by val.
mutate(name = factor(town, levels(town))) %>%
# %>%   # This trick update the factor levels
ggplot( aes(x=town, y=resale_price_kSGD))+
# +
geom_boxplot() +
theme(legend.position="none") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
Resale %>%
arrange(resale_price_kSGD) %>%    # First sort by val.
mutate(name = factor(town, levels(town))) %>%   # This trick update the factor levels
ggplot( aes(x=town, y=resale_price_kSGD))+
geom_boxplot() +
theme(legend.position="none") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
Resale %>%
arrange(mean(resale_price_kSGD)) %>%    # First sort by val.
mutate(name = factor(town, levels(town))) %>%   # This trick update the factor levels
ggplot( aes(x=town, y=resale_price_kSGD))+
geom_boxplot() +
theme(legend.position="none") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
?mean
Resale %>%
arrange(mean(resale_price_kSGD)) %>%    # First sort by val.
mutate(name = factor(town, levels(town))) %>%   # This trick update the factor levels
ggplot( aes(x=town, y=resale_price_kSGD))+
geom_boxplot() +
theme(legend.position="none") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
Resale %>%
arrange(max(resale_price_kSGD)) %>%    # First sort by val.
mutate(name = factor(town, levels(town))) %>%   # This trick update the factor levels
ggplot( aes(x=town, y=resale_price_kSGD))+
geom_boxplot() +
theme(legend.position="none") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
Resale %>%
group_by(town) %>%
arrange(mean(resale_price_kSGD)) %>%    # First sort by val.
mutate(name = factor(town, levels(town))) %>%   # This trick update the factor levels
ggplot( aes(x=town, y=resale_price_kSGD))+
geom_boxplot() +
theme(legend.position="none") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
Resale_raw <- read_csv("Data/resale-flat-prices-based-on-registration-date-from-jan-2017-onwards.csv")
summary(Resale_raw)
head(Resale_raw,5)
Resale <-Resale_raw %>%
separate(`month`, into = c("Year", "Month"), sep = "-") %>%
filter(Year == "2022") %>%
select("town", "flat_type", "storey_range", "floor_area_sqm", "lease_commence_date", "resale_price", "Year", "Month")
Resale <- Resale %>%
filter(flat_type %in% c("3 ROOM","4 ROOM", "5 ROOM"))
Resale <- Resale %>%
filter(flat_type %in% c("3 ROOM","4 ROOM", "5 ROOM"))
Resale <- Resale %>%
mutate(resale_price=resale_price/100)
rename('resale_price_kSGD' = 'resale_price')
Resale <- Resale %>%
mutate(resale_price=resale_price/100) %>%
rename('resale_price_kSGD' = 'resale_price')
set.seed(1234)
gghistostats(
data = Resale,
x = 'resale_price_kSGD',
type = "bayes",
test.value = 60,
xlab = "resale_price (kSGD)"
)
set.seed(1234)
gghistostats(
data = Resale,
x = 'floor_area_sqm',
type = "bayes",
test.value = 60,
xlab = "floor_area_sqm"
)
ggbetweenstats(
data = Resale,
x = 'flat_type',
y = 'resale_price_kSGD',
type = "np",
messages = FALSE
)
# Use single color
ggplot(Resale, aes(x=flat_type, y=resale_price_kSGD)) +
geom_boxplot(fill='#A4A4A4', color="black")+
stat_summary(fun.y=mean, geom="point") +
theme_classic()
# Change box plot colors by groups
p<-ggplot(Resale, aes(x=flat_type, y=resale_price_kSGD, fill=flat_type)) +
geom_boxplot() +
stat_summary(fun.y=mean, geom="point", color="red") +
theme(legend.position="none")
# Remove legend
p
Resale %>%
group_by(town) %>%
summarize(mean_price = mean(resale_price_kSGD)) %>%
arrange(mean_price) %>%    # First sort by val.
mutate(name = factor(town, levels(town))) %>%   # This trick update the factor levels
ggplot( aes(x=town, y=resale_price_kSGD))+
geom_boxplot() +
theme(legend.position="none") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
Resale %>%
group_by(town) %>%
summarize(mean_price = mean(resale_price_kSGD)) %>%
arrange(mean_price) %>%    # First sort by mean
# mutate(name = factor(town, levels(town))) %>%   # This trick update the factor levels
# ggplot( aes(x=town, y=resale_price_kSGD))+
# geom_boxplot() +
# theme(legend.position="none") +
# theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
# starwars %>%
#   select(species, gender, birth_year, mass, height, hair_color) %>%
#   group_by(gender) %>%
#   na.omit() %>%
#   summarize(mean_height=mean(height))
Resale %>%
group_by(town) %>%
summarize(mean_price = mean(resale_price_kSGD)) %>%
arrange(mean_price)  # First sort by mean
# mutate(name = factor(town, levels(town))) %>%   # This trick update the factor levels
# ggplot( aes(x=town, y=resale_price_kSGD))+
# geom_boxplot() +
# theme(legend.position="none") +
# theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
# starwars %>%
#   select(species, gender, birth_year, mass, height, hair_color) %>%
#   group_by(gender) %>%
#   na.omit() %>%
#   summarize(mean_height=mean(height))
Resale %>%
group_by(town) %>%
summarize(mean_price = mean(resale_price_kSGD)) %>%
arrange(mean_price) %>%  # First sort by mean
mutate(name = factor(town, levels(town)))   # This trick update the factor levels
# ggplot( aes(x=town, y=resale_price_kSGD))+
# geom_boxplot() +
# theme(legend.position="none") +
# theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
# starwars %>%
#   select(species, gender, birth_year, mass, height, hair_color) %>%
#   group_by(gender) %>%
#   na.omit() %>%
#   summarize(mean_height=mean(height))
Resale %>%
mutate(class = fct_reorder(town, resale_price_kSGD, .fun='median')) %>%
# mutate(name = factor(town, levels(town))) %>%   # This trick update the factor levels
ggplot( aes(x=town, y=resale_price_kSGD))+
geom_boxplot() +
theme(legend.position="none") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
Resale %>%
mutate(class = fct_reorder(town, resale_price_kSGD, .fun='median')) %>%
ggplot( aes(x=reorder(town, resale_price_kSGD), y=resale_price_kSGD))+
geom_boxplot() +
theme(legend.position="none") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
Resale %>%
mutate(class = fct_reorder(town, resale_price_kSGD, .fun='median')) %>%
ggplot( aes(x=reorder(town, resale_price_kSGD), y=resale_price_kSGD))+
geom_boxplot() +
theme(legend.position="none") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
Resale %>%
mutate(class = fct_reorder(town, resale_price_kSGD, .fun='mean')) %>%
ggplot( aes(x=reorder(town, resale_price_kSGD), y=resale_price_kSGD))+
geom_boxplot() +
theme(legend.position="none") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
Resale %>%
mutate(class = fct_reorder(town, resale_price_kSGD, .fun='mean')) %>%
ggplot( aes(x=reorder(town, resale_price_kSGD), y=resale_price_kSGD))+
geom_boxplot() +
stat_summary(fun.y=mean, geom="point", color="red") +
theme(legend.position="none") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
Resale %>%
mutate(class = fct_reorder(town, resale_price_kSGD, .fun='mean', ascending=FALSE)) %>%
ggplot( aes(x=reorder(town, resale_price_kSGD), y=resale_price_kSGD))+
geom_boxplot() +
stat_summary(fun.y=mean, geom="point", color="red") +
theme(legend.position="none") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
Resale %>%
mutate(class = fct_reorder(town, resale_price_kSGD, .fun='mean')) %>%
ggplot( aes(x=reorder(town, resale_price_kSGD), y=resale_price_kSGD))+
geom_boxplot() +
stat_summary(fun.y=mean, geom="point", color="red") +
theme(legend.position="none") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
Resale %>%
# mutate(class = fct_reorder(town, resale_price_kSGD, .fun='mean')) %>%
ggplot( aes(x=reorder(town, resale_price_kSGD), y=resale_price_kSGD))+
geom_boxplot() +
stat_summary(fun.y=mean, geom="point", color="red") +
theme(legend.position="none") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
Resale_raw <- read_csv("Data/resale-flat-prices-based-on-registration-date-from-jan-2017-onwards.csv")
summary(Resale_raw)
head(Resale_raw,5)
Resale <-Resale_raw %>%
separate(`month`, into = c("Year", "Month"), sep = "-") %>%
filter(Year == "2022") %>%
select("town", "flat_type", "storey_range", "floor_area_sqm", "lease_commence_date", "resale_price", "Year", "Month")
Resale <- Resale %>%
filter(flat_type %in% c("3 ROOM","4 ROOM", "5 ROOM"))
