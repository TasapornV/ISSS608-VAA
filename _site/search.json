[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About me",
    "section": "",
    "text": "Hi there!\nThanks for stopping by my little corner of the internet! My name is Tasaporn Visawameteekul, and I’m excited to know that you have seen my work. I’m just an engineer who fall in love with an art of data visualization. Even though I’m just a beginner, but I hope my blog here would be any help to you.\nEducation\nMS in Master of IT in Business, Analytics track (2023) | Singapore Management University, Singapore\nBS in Electrical engineering (2012) | Chulalongkorn University, Thailand\nExperience"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "Getting Started\n\nInstall and launching R packages\nThe code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\nImporting the data\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nPlotting a simple bar chart\n\nggplot(data = exam_data,\n       aes(x = RACE)) +\n  geom_bar()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "Install and launching\n\npacman::p_load(ggiraph, tidyverse)\n\n\n\nImporting the data\n\nexam_data <- read.csv(\"data/Exam_data.csv\")\nhead(exam_data,10)\n\n           ID CLASS GENDER    RACE ENGLISH MATHS SCIENCE\n1  Student321    3I   Male   Malay      21     9      15\n2  Student305    3I Female   Malay      24    22      16\n3  Student289    3H   Male Chinese      26    16      16\n4  Student227    3F   Male Chinese      27    77      31\n5  Student318    3I   Male   Malay      27    11      25\n6  Student306    3I Female   Malay      31    16      16\n7  Student313    3I   Male Chinese      31    21      25\n8  Student316    3I   Male   Malay      31    18      27\n9  Student312    3I   Male   Malay      33    19      15\n10 Student297    3H   Male  Indian      34    49      37\n\n\nPlotting a simple bar chart\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5, \n               dotsize = 0.5) +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\n\n\n\n\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              #<<\n    aes(tooltip = ID),                   #<<\n    stackgroups = TRUE,                  #<<\n    binwidth = 1,                        #<<\n    method = \"histodot\") +               #<<\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  #<<\n  ggobj = p,                             #<<\n  width_svg = 6,                         #<<\n  height_svg = 6*0.618                   #<<   \n)                                        #<<\n\n\n\n\n\n\nDisplaying multiple information on tooltip\n\n# string to put in the tooltips\nexam_data$tooltip <- c(paste0(     #<<\n  \"Name = \", exam_data$ID,         #<<\n  \"\\n Class = \", exam_data$CLASS)) #<<\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), #<<\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\nWarning: Use of `exam_data$tooltip` is discouraged.\nℹ Use `tooltip` instead.\n\n\n\n\n\n\n\n\nCustomising Tooltip style\n\n# If you want to change background color\ntooltip_css <- \"background-color:green; #<<\nfont-style:bold; color:black;\" #<<\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #<<\n    opts_tooltip(    #<<\n      css = tooltip_css)) #<<\n)                                        \n\n\n\n\n\n\n\nDisplaying statistics on tooltip\n\ntooltip <- function(y, ymax, accuracy = .01) {   #<<\n  mean <- scales::number(y, accuracy = accuracy) #<<\n  sem <- scales::number(ymax - y, accuracy = accuracy) #<<\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem) #<<\n} #<<\n\ngg_point <- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  #<<\n                     tooltip(y, ymax))),  #<<\n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  #<<\n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "pacman::p_load(ggstatsplot, tidyverse)\nlibrary(ggstatsplot)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#one-sample-test-gghistostats-method",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#one-sample-test-gghistostats-method",
    "title": "Hands-on Exercise 4",
    "section": "One-sample test: gghistostats() method",
    "text": "One-sample test: gghistostats() method\neasystats: https://easystats.github.io/easystats/\n\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#two-sample-mean-test-ggbetweenstats",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#two-sample-mean-test-ggbetweenstats",
    "title": "Hands-on Exercise 4",
    "section": "Two-sample mean test: ggbetweenstats()",
    "text": "Two-sample mean test: ggbetweenstats()\n\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#oneway-anova-test-ggbetweenstats-method",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#oneway-anova-test-ggbetweenstats-method",
    "title": "Hands-on Exercise 4",
    "section": "Oneway ANOVA Test: ggbetweenstats() method",
    "text": "Oneway ANOVA Test: ggbetweenstats() method\n\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#significant-test-of-correlation-ggscatterstats",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#significant-test-of-correlation-ggscatterstats",
    "title": "Hands-on Exercise 4",
    "section": "Significant Test of Correlation: ggscatterstats()",
    "text": "Significant Test of Correlation: ggscatterstats()\n\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE,\n  )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#significant-test-of-association-depedence-ggbarstats-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#significant-test-of-association-depedence-ggbarstats-methods",
    "title": "Hands-on Exercise 4",
    "section": "Significant Test of Association (Depedence) : ggbarstats() methods",
    "text": "Significant Test of Association (Depedence) : ggbarstats() methods\n\nexam1 <- exam %>% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0,60,75,85,100))\n)\n\n\nggbarstats(exam1, \n           x = MATHS_bins, \n           y = GENDER)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#importing-excel-file-readxl-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#importing-excel-file-readxl-methods",
    "title": "Hands-on Exercise 4",
    "section": "Importing Excel file: readxl methods",
    "text": "Importing Excel file: readxl methods\n\ncar_resale <- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n\n# A tibble: 1,436 × 38\n      Id Model       Price Age_0…¹ Mfg_M…² Mfg_Y…³     KM Quart…⁴ Weight Guara…⁵\n   <dbl> <chr>       <dbl>   <dbl>   <dbl>   <dbl>  <dbl>   <dbl>  <dbl>   <dbl>\n 1    81 TOYOTA Cor… 18950      25       8    2002  20019     100   1180       3\n 2     1 TOYOTA Cor… 13500      23      10    2002  46986     210   1165       3\n 3     2 TOYOTA Cor… 13750      23      10    2002  72937     210   1165       3\n 4     3  TOYOTA Co… 13950      24       9    2002  41711     210   1165       3\n 5     4 TOYOTA Cor… 14950      26       7    2002  48000     210   1165       3\n 6     5 TOYOTA Cor… 13750      30       3    2002  38500     210   1170       3\n 7     6 TOYOTA Cor… 12950      32       1    2002  61000     210   1170       3\n 8     7  TOYOTA Co… 16900      27       6    2002  94612     210   1245       3\n 9     8 TOYOTA Cor… 18600      30       3    2002  75889     210   1245       3\n10    44 TOYOTA Cor… 16950      27       6    2002 110404     234   1255       3\n# … with 1,426 more rows, 28 more variables: HP_Bin <chr>, CC_bin <chr>,\n#   Doors <dbl>, Gears <dbl>, Cylinders <dbl>, Fuel_Type <chr>, Color <chr>,\n#   Met_Color <dbl>, Automatic <dbl>, Mfr_Guarantee <dbl>,\n#   BOVAG_Guarantee <dbl>, ABS <dbl>, Airbag_1 <dbl>, Airbag_2 <dbl>,\n#   Airco <dbl>, Automatic_airco <dbl>, Boardcomputer <dbl>, CD_Player <dbl>,\n#   Central_Lock <dbl>, Powered_Windows <dbl>, Power_Steering <dbl>,\n#   Radio <dbl>, Mistlamps <dbl>, Sport_Model <dbl>, Backseat_Divider <dbl>, …"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#multiple-regression-model-using-lm",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#multiple-regression-model-using-lm",
    "title": "Hands-on Exercise 4",
    "section": "Multiple Regression Model using lm()",
    "text": "Multiple Regression Model using lm()\n\nmodel <- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#model-diagnostic-checking-for-multicolinearity",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#model-diagnostic-checking-for-multicolinearity",
    "title": "Hands-on Exercise 4",
    "section": "Model Diagnostic: checking for multicolinearity:",
    "text": "Model Diagnostic: checking for multicolinearity:\n\ncheck_collinearity(model)\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Guarantee_Period  1.04   [1.01, 1.17]         1.02      0.97     [0.86, 0.99]\n        Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n         Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\nHigh Correlation\n\n   Term  VIF   VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n     KM 1.46 [1.37, 1.57]         1.21      0.68     [0.64, 0.73]\n Weight 1.41 [1.32, 1.51]         1.19      0.71     [0.66, 0.76]\n\n\n\ncheck_c <- check_collinearity(model)\nplot(check_c)\n\nVariable `Component` is not in your data frame :/\n\n\n\n\n\n\nModel Diagnostic: checking normality assumption\n\nmodel1 <- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\n\ncheck_n <- check_normality(model1)\n\n\nplot(check_n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#model-diagnostic-check-model-for-homogeneity-of-variances",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#model-diagnostic-check-model-for-homogeneity-of-variances",
    "title": "Hands-on Exercise 4",
    "section": "Model Diagnostic: Check model for homogeneity of variances",
    "text": "Model Diagnostic: Check model for homogeneity of variances\n\ncheck_h <- check_heteroscedasticity(model1)\n\n\nplot(check_h)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#model-diagnostic-complete-check",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#model-diagnostic-complete-check",
    "title": "Hands-on Exercise 4",
    "section": "Model Diagnostic: Complete check",
    "text": "Model Diagnostic: Complete check\n\ncheck_model(model1)\n\nVariable `Component` is not in your data frame :/"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-regression-parameters-see-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-regression-parameters-see-methods",
    "title": "Hands-on Exercise 4",
    "section": "Visualising Regression Parameters: see methods",
    "text": "Visualising Regression Parameters: see methods\n\nplot(parameters(model1))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-regression-parameters-ggcoefstats-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-regression-parameters-ggcoefstats-methods",
    "title": "Hands-on Exercise 4",
    "section": "Visualising Regression Parameters: ggcoefstats() methods",
    "text": "Visualising Regression Parameters: ggcoefstats() methods\n\nggcoefstats(model1, \n            output = \"plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggplot2-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggplot2-methods",
    "title": "Hands-on Exercise 4",
    "section": "Visualizing the uncertainty of point estimates: ggplot2 methods",
    "text": "Visualizing the uncertainty of point estimates: ggplot2 methods\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean \n          maths score by rac\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\nVisualizing the uncertainty of point estimates: ggplot2 methods\nPlot the 95% confidence interval of mean maths score by race. The error bars should be sorted by the average maths scores.\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=sort(RACE),\n        ymin=mean-se,\n        ymax=mean+se),\n    width=0.2,\n    colour=\"black\",\n    alpha=0.95,\n    size=0.5) +\n  geom_point(aes\n           (x=RACE,\n            y=mean),\n           stat=\"identity\",\n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean \n          maths score by rac\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/Hands-on_Ex03.html",
    "href": "In-class_Ex/In-class_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "Getting Started\n\nInstall and launching R packages\nTwo packages will be installed and loaded. They are: tidyverse, ggiraph\n\npacman::p_load(ggiraph, tidyverse)\n\nImporting data\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\nexam_data\n\n# A tibble: 322 × 7\n   ID         CLASS GENDER RACE    ENGLISH MATHS SCIENCE\n   <chr>      <chr> <chr>  <chr>     <dbl> <dbl>   <dbl>\n 1 Student321 3I    Male   Malay        21     9      15\n 2 Student305 3I    Female Malay        24    22      16\n 3 Student289 3H    Male   Chinese      26    16      16\n 4 Student227 3F    Male   Chinese      27    77      31\n 5 Student318 3I    Male   Malay        27    11      25\n 6 Student306 3I    Female Malay        31    16      16\n 7 Student313 3I    Male   Chinese      31    21      25\n 8 Student316 3I    Male   Malay        31    18      27\n 9 Student312 3I    Male   Malay        33    19      15\n10 Student297 3H    Male   Indian       34    49      37\n# … with 312 more rows"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In-class Exercise 4",
    "section": "",
    "text": "Getting Started"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#one-sample-test-gghistostats-method",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#one-sample-test-gghistostats-method",
    "title": "In-class Exercise 4",
    "section": "One-sample test: gghistostats() method",
    "text": "One-sample test: gghistostats() method\neasystats: https://easystats.github.io/easystats/\n\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#two-sample-mean-test-ggbetweenstats",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#two-sample-mean-test-ggbetweenstats",
    "title": "In-class Exercise 4",
    "section": "Two-sample mean test: ggbetweenstats()",
    "text": "Two-sample mean test: ggbetweenstats()\n\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#oneway-anova-test-ggbetweenstats-method",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#oneway-anova-test-ggbetweenstats-method",
    "title": "In-class Exercise 4",
    "section": "Oneway ANOVA Test: ggbetweenstats() method",
    "text": "Oneway ANOVA Test: ggbetweenstats() method\n\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#significant-test-of-correlation-ggscatterstats",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#significant-test-of-correlation-ggscatterstats",
    "title": "In-class Exercise 4",
    "section": "Significant Test of Correlation: ggscatterstats()",
    "text": "Significant Test of Correlation: ggscatterstats()\n\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE,\n  )"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#significant-test-of-association-depedence-ggbarstats-methods",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#significant-test-of-association-depedence-ggbarstats-methods",
    "title": "In-class Exercise 4",
    "section": "Significant Test of Association (Depedence) : ggbarstats() methods",
    "text": "Significant Test of Association (Depedence) : ggbarstats() methods\n\nexam1 <- exam %>% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0,60,75,85,100))\n)\n\n\nggbarstats(exam1, \n           x = MATHS_bins, \n           y = GENDER)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#importing-excel-file-readxl-methods",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#importing-excel-file-readxl-methods",
    "title": "In-class Exercise 4",
    "section": "Importing Excel file: readxl methods",
    "text": "Importing Excel file: readxl methods\n\ncar_resale <- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n\n# A tibble: 1,436 × 38\n      Id Model       Price Age_0…¹ Mfg_M…² Mfg_Y…³     KM Quart…⁴ Weight Guara…⁵\n   <dbl> <chr>       <dbl>   <dbl>   <dbl>   <dbl>  <dbl>   <dbl>  <dbl>   <dbl>\n 1    81 TOYOTA Cor… 18950      25       8    2002  20019     100   1180       3\n 2     1 TOYOTA Cor… 13500      23      10    2002  46986     210   1165       3\n 3     2 TOYOTA Cor… 13750      23      10    2002  72937     210   1165       3\n 4     3  TOYOTA Co… 13950      24       9    2002  41711     210   1165       3\n 5     4 TOYOTA Cor… 14950      26       7    2002  48000     210   1165       3\n 6     5 TOYOTA Cor… 13750      30       3    2002  38500     210   1170       3\n 7     6 TOYOTA Cor… 12950      32       1    2002  61000     210   1170       3\n 8     7  TOYOTA Co… 16900      27       6    2002  94612     210   1245       3\n 9     8 TOYOTA Cor… 18600      30       3    2002  75889     210   1245       3\n10    44 TOYOTA Cor… 16950      27       6    2002 110404     234   1255       3\n# … with 1,426 more rows, 28 more variables: HP_Bin <chr>, CC_bin <chr>,\n#   Doors <dbl>, Gears <dbl>, Cylinders <dbl>, Fuel_Type <chr>, Color <chr>,\n#   Met_Color <dbl>, Automatic <dbl>, Mfr_Guarantee <dbl>,\n#   BOVAG_Guarantee <dbl>, ABS <dbl>, Airbag_1 <dbl>, Airbag_2 <dbl>,\n#   Airco <dbl>, Automatic_airco <dbl>, Boardcomputer <dbl>, CD_Player <dbl>,\n#   Central_Lock <dbl>, Powered_Windows <dbl>, Power_Steering <dbl>,\n#   Radio <dbl>, Mistlamps <dbl>, Sport_Model <dbl>, Backseat_Divider <dbl>, …"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#multiple-regression-model-using-lm",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#multiple-regression-model-using-lm",
    "title": "In-class Exercise 4",
    "section": "Multiple Regression Model using lm()",
    "text": "Multiple Regression Model using lm()\n\nmodel <- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#model-diagnostic-checking-for-multicolinearity",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#model-diagnostic-checking-for-multicolinearity",
    "title": "In-class Exercise 4",
    "section": "Model Diagnostic: checking for multicolinearity:",
    "text": "Model Diagnostic: checking for multicolinearity:\n\ncheck_collinearity(model)\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Guarantee_Period  1.04   [1.01, 1.17]         1.02      0.97     [0.86, 0.99]\n        Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n         Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\nHigh Correlation\n\n   Term  VIF   VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n     KM 1.46 [1.37, 1.57]         1.21      0.68     [0.64, 0.73]\n Weight 1.41 [1.32, 1.51]         1.19      0.71     [0.66, 0.76]\n\n\n\ncheck_c <- check_collinearity(model)\nplot(check_c)\n\n\n\n\n\nModel Diagnostic: checking normality assumption\n\nmodel1 <- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\n\ncheck_n <- check_normality(model1)\n\n\nplot(check_n)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#model-diagnostic-check-model-for-homogeneity-of-variances",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#model-diagnostic-check-model-for-homogeneity-of-variances",
    "title": "In-class Exercise 4",
    "section": "Model Diagnostic: Check model for homogeneity of variances",
    "text": "Model Diagnostic: Check model for homogeneity of variances\n\ncheck_h <- check_heteroscedasticity(model1)\n\n\nplot(check_h)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#model-diagnostic-complete-check",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#model-diagnostic-complete-check",
    "title": "In-class Exercise 4",
    "section": "Model Diagnostic: Complete check",
    "text": "Model Diagnostic: Complete check\n\ncheck_model(model1)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#visualising-regression-parameters-see-methods",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#visualising-regression-parameters-see-methods",
    "title": "In-class Exercise 4",
    "section": "Visualising Regression Parameters: see methods",
    "text": "Visualising Regression Parameters: see methods\n\nplot(parameters(model1))"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#visualising-regression-parameters-ggcoefstats-methods",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#visualising-regression-parameters-ggcoefstats-methods",
    "title": "In-class Exercise 4",
    "section": "Visualising Regression Parameters: ggcoefstats() methods",
    "text": "Visualising Regression Parameters: ggcoefstats() methods\n\nggcoefstats(model1, \n            output = \"plot\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggplot2-methods",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggplot2-methods",
    "title": "In-class Exercise 4",
    "section": "Visualizing the uncertainty of point estimates: ggplot2 methods",
    "text": "Visualizing the uncertainty of point estimates: ggplot2 methods\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean \n          maths score by rac\")\n\n\n\n\n\nVisualizing the uncertainty of point estimates: ggplot2 methods\nPlot the 95% confidence interval of mean maths score by race. The error bars should be sorted by the average maths scores.\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=sort(RACE),\n        ymin=mean-se,\n        ymax=mean+se),\n    width=0.2,\n    colour=\"black\",\n    alpha=0.95,\n    size=0.5) +\n  geom_point(aes\n           (x=RACE,\n            y=mean),\n           stat=\"identity\",\n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean \n          maths score by rac\")"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications. This blog is developed by Tasaporn Visawameteekul. It is still a work in progress, where data visualizations will be uploaded weekly.\nThis blog contains my journey of creating data visualization beyond default, using R and Tableau. This is part of the ISSS608 course by SMU MITB program, by Prof Kam Tin Seong from Jan - Apr 2023.\nIf you have any feedback or need any clarification, you may contact me at tasapornv.2021@mitb.smu.edu.sg.\nI hope you enjoy it!\n\n\n\n\n\nIn-class exercise\n\n\n\n \n\n\n\n\nHands-on exercise\n\n\n\n \n\n\n\n\nTake-home exercise"
  },
  {
    "objectID": "indexInclass.html#in-class-exercise-03-28-jan-2023",
    "href": "indexInclass.html#in-class-exercise-03-28-jan-2023",
    "title": "In-class Exercise",
    "section": "In-class Exercise 03 (28 Jan 2023)",
    "text": "In-class Exercise 03 (28 Jan 2023)"
  },
  {
    "objectID": "indexTakehome.html#take-home-exercise-02",
    "href": "indexTakehome.html#take-home-exercise-02",
    "title": "Take-home Exercise",
    "section": "Take-home Exercise 02",
    "text": "Take-home Exercise 02"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "1. The task\nAge-sex pyramid is an analytical visualization commonly used by demographers to reveal the structure of population by gender and age group. In this take-home exercise, you are required to reveal the demographic structure of Singapore at planning area level by using age-sex pyramid method. Instead of plotting a single age-sex pyramid, however, you are required to display nine selected planning areas on a single view by using trellis display (also know as small-multiple plot).\n\n\n2. Data\n“Singapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling, June 2022” is used to prepare the analytical visualization. It is available at Department of Statistics, Singapore(SingStat).\n\nMetadata\nPA = Planning Area\nSZ = Subzone\nAG = Age Group\nSex = Sex\nTOD = Type of Dwelling\nPop = Resident Count\nTime = Time / Period\nNote:\n\nFor June 2022, Planning Areas refer to areas demarcated in the Urban Redevelopment Authority’s Master Plan 2019.\nData from 2003 onwards exclude residents who have been away from Singapore for a continuous period of 12 months or longer as at the reference period.\nThe figures have been rounded to the nearest 10. 4) The data may not add up due to rounding.\n\nDate generated: 29/02/2022 Source: Singapore Department of Statistics\n\n\n\n3. Analysis\n\nWhat is the distribution of Singapore residence by Planning Area?\n\nThe above bar chart depicts the number of residents in each Planning Area. In this scenario, we choose the 9 most populous areas, which account for 52.3% of the overall population.\nNow, let’s examine the demographic specifics of these nine regions. What is the age and gender distribution of the population in each area? We will utilize the pyramid chart, which is separated into equal-height horizontal divisions. The width of each part varies. Population pyramids are produced using a horizontal column chart with positive and negative values. These graphs permit comparisons of distinct categories (in this case, age) across two series (male and female).\nIn addition, for comparative purposes, we introduce Trellis plot techniques, which consist of a grid of smaller plots. Each small plot represents a unique state or item, and all small plots have identical scales.\n\n\nWhat is the demographic breakdown of Singaporeans in the top 9 most populous Planning Areas?\n\n\n\nDesign 1 : 3x3 Trellis plot\n\n\nAt first glance, the shapes of all 9 selected areas are symmetrical. This reflects the proportional distribution of males and females. However, there are a variety of shapes. Bedok, Jurong West, and Hougang have a similar shape, with a symmetrical small apex that gradually widens and tapers to a smaller base. These 3 regions contain a substantial proportion of residents between the ages of 40-69. While Sengkang and Punggol have a form that widens in the 30-59-year age range, the population in the 20-29-year age group is much smaller.\nThis graph also reveals that the senior female population tends to be slightly more than the senior male population.\n\n\n\nDesign 2 : 1x9 Trellis plot\n\n\n\n\n\n4. Visualization Design Discussion\nFrom the Trellis plot above\n\nBedok, which is the most populous area has a big percentage of Senior generation (60 and above) compare to the other area\n\n\n\n5. Step-by-Step Description\n\n1. Prepare the data\nIn this project, we prepare the data using Tableau Prep Builder version 2022.4.0, which makes data preparation simple and intuitive.\n\n\n\n\n\n\n\nNo.\nStep\n\n\n\n\n1.1\n\n\nOpen Tableau Prep Builder\nClick the blue button “Connect to Data”\nWe are using csv file, therefore pick “Text file”\nConnect our main data file “respopagesextod2022.csv”\nThe data field summary will be displayed as indicated in the image. We can see from this that our original data had 7 fields.\n\n\n\n1.2\n\n\nAdd a clean step by clicking the “+ symbol” and then selecting “Clean Step”\nTo eliminate Planning areas with no population, remove the zero value from the “Pop” parameter\nRename the step as “Filter Pop”\n\n\n\n1.3\n\n\nAdd a clean step “Group age range”\nTo make analysis easier, group the age range into 10 years\n\n\n\n1.4\n\n\nAdd a clean step “Create parameter”\nCreate the fields “Female Population” and “Male Population” using the following formula\n\nIF [Sex]=‘Females’ THEN [Pop] ELSE 0 END\nIF [SEX] = ‘Males’ THEN [Pop] ELSE 0 END\n\nRemove any unneeded fields, including Sex, SZ, TOD, and Time\nAt this point, you should get data with 5 fields 31K rows\n\n\n\n1.5\n\n\nExport the cleansed data to Tableau Desktop with a right-click and the “Preview in Tableau Desktop” option\n\n\n\n\n\n\n2. Prepare the visualization Design 1\nNow that we have import the cleansed data into Tableau Desktop\n\n\n\n\n\n\n\nNo.\nStep\n\n\n\n\n2.1\n\n\nWe begin by creating the “Total columns” parameter. In our scenario, we wish to generate 3x3 tables with a value of 3 for each column.\n\n\n\n2.2\n\n\nCreate the Calculated Field “Index”, “Column”, and “Row” with the following formula\nIndex = INT((INDEX())%[Total columns]^2+1\nColumn = INT(([Index]-1)%[Total columns])+1\nRow = INT(([Index]-[Column])/[Total columns])+1\n\n\n\n2.3\n\n\nDrag the “Column” Calculated Field into the Columns section. Drag the “Row” calculated field into the Rows section\nMake sure that the Column and Row are set as Discrete type\n\n\n\n2.4\n\n\nCreate the Trellis plot of 3x3 age-sex pyramid according to the Planning Area by setting the fields as depicted in the image.\n\n\n\n2.5\n\n\n\n2.6\n\n\n\n2.7\n\n\n\n2.8\n\n\n\n2.9\n\n\n\n2.10\n\n\n\n2.11\n\n\n\n2.12\n\n\n\n2.13\n\n\n\n\n\n\n\n6. Reference\nEgervari. (n.d.). The Data School - Displaying multiple Charts in one Worksheet – The Trellis Chart. The Data School - Displaying Multiple Charts in One Worksheet – the Trellis Chart. Retrieved January 21, 2023, from https://www.thedataschool.co.uk/frederik-egervari/displaying-multiple-charts-in-one-worksheet-the-trellis-chart/\nBetzendahl, L. (2019, April 25). Trellis Charts and Color Highlighting. Viz Zen Data. Retrieved January 21, 2023, from https://vizzendata.com/2019/04/25/trellis-charts-and-color-highlighting/\n(2017, February 17). Workout Wednesday Week 7 - Dynamic Trellis Chart. Visual Vantage. Retrieved January 21, 2023, from http://www.tarannum.io//2017/02/17/workout-wednesday-week7.html\nSleeper. (2017, August 22). How to Make Trellis / Tile / Small Multiple Maps in Tableau | Playfair Data. Playfair Data. Retrieved January 21, 2023, from https://playfairdata.com/how-to-make-trellis-tile-small-multiple-maps-in-tableau/\n(2020, June 22). A Detailed Guide on How to Create a Tableau Pareto Chart | DataCrunchCorp. A Detailed Guide on How to Create a Tableau Pareto Chart | DataCrunchCorp. Retrieved January 21, 2023, from https://datacrunchcorp.com/tableau-pareto-chart/"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "1. The task\nAge-sex pyramid is an analytical visualization commonly used by demographers to reveal the structure of population by gender and age group. In this take-home exercise, you are required to reveal the demographic structure of Singapore at planning area level by using age-sex pyramid method. Instead of plotting a single age-sex pyramid, however, you are required to display nine selected planning areas on a single view by using trellis display (also know as small-multiple plot).\n\n\n2. Data\n“Singapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling, June 2022” is used to prepare the analytical visualization. It is available at Department of Statistics, Singapore(SingStat).\n\nMetadata\nPA = Planning Area\nSZ = Subzone\nAG = Age Group\nSex = Sex\nTOD = Type of Dwelling\nPop = Resident Count\nTime = Time / Period\nNote:\n\nFor June 2022, Planning Areas refer to areas demarcated in the Urban Redevelopment Authority’s Master Plan 2019.\nData from 2003 onwards exclude residents who have been away from Singapore for a continuous period of 12 months or longer as at the reference period.\nThe figures have been rounded to the nearest 10. 4) The data may not add up due to rounding.\n\nDate generated: 29/02/2022 Source: Singapore Department of Statistics\n\n\n\n3. Analysis\n\nWhat is the distribution of Singapore residence by Planning Area?\n\nThe above bar chart depicts the number of residents in each Planning Area. In this scenario, we choose the 9 most populous areas, which account for 52.3% of the overall population.\nNow, let’s examine the demographic specifics of these nine regions. What is the age and gender distribution of the population in each area? We will utilize the pyramid chart, which is separated into equal-height horizontal divisions. The width of each part varies. Population pyramids are produced using a horizontal column chart with positive and negative values. These graphs permit comparisons of distinct categories (in this case, age) across two series (male and female).\nIn addition, for comparative purposes, we introduce Trellis plot techniques, which consist of a grid of smaller plots. Each small plot represents a unique state or item, and all small plots have identical scales.\n\n\nWhat is the demographic breakdown of Singaporeans in the top 9 most populous Planning Areas?\n\n\n\nDesign 1 : 3x3 Trellis plot\n\n\nAt first look, each of the 9 selected areas appears to have a symmetrical shape. This indicates the ratio of males to females in the population. However, a closer examination reveals that the senior female population is typically slightly larger than the senior male population.\nWe may categorize them into 4 groups based on their similarities.\n\nThe first group comprises two areas, namely Bedok and Jurong West. They have a similar shape, with symmetrical small apex that gradually widens and tapers to a smaller base. These 2 regions contain a substantial proportion of residents between the ages of 40-69.\nWhile the next group Sengkang and Punggol have a form that widens in the 30-39 and 40-49 year age-range, the population in the 20-29-year age group is much smaller.\nThe following group includes 4 areas: Tampines, Woodlands, Hougang, and Choa Chu Kang. This group depicts a little head that rapidly enlarges between the ages of 60 - 69, narrows between the ages of 40-49, and then enlarges again before narrowing at the bottom.\nThe final one is Yishun, which has a unique shape compared to the others. In Yishun, the proportions of the people in the age groups 40-49, 50-59, and 60-69 are very similar, while the 30-39 age group is the greatest.\n\n\n\n\n4. Step-by-Step Description\n\n1. Prepare the data\nIn this project, we prepare the data using Tableau Prep Builder version 2022.4.0, which makes data preparation simple and intuitive.\n\n\n\n\n\n\n\nNo.\nStep\n\n\n\n\n1.1\n\n\nOpen Tableau Prep Builder\nClick the blue button “Connect to Data”\nWe are using csv file, therefore pick “Text file”\nConnect our main data file “respopagesextod2022.csv”\nThe data field summary will be displayed as indicated in the image. We can see from this that our original data had 7 fields.\n\n\n\n1.2\n\n\nAdd a clean step by clicking the “+ symbol” and then selecting “Clean Step”\nTo eliminate Planning areas with no population, remove the zero value from the “Pop” parameter\nRename the step as “Filter Pop”\n\n\n\n1.3\n\n\nAdd a clean step “Group age range”\nTo make analysis easier, group the age range into 10 years\n\n\n\n1.4\n\n\nAdd a clean step “Create parameter”\nCreate the fields “Female Population” and “Male Population” using the following formula\n\nIF [Sex]=‘Females’ THEN [Pop] ELSE 0 END\nIF [SEX] = ‘Males’ THEN [Pop] ELSE 0 END\n\nRemove any unneeded fields, including Sex, SZ, TOD, and Time\nAt this point, you should get data with 5 fields 31K rows\n\n\n\n1.5\n\n\nExport the cleansed data to Tableau Desktop with a right-click and the “Preview in Tableau Desktop” option\n\n\n\n\n\n\n2. Prepare the visualization\nNow that we have import the cleansed data into Tableau Desktop\n\n\n\n\n\n\n\nNo.\nStep\n\n\n\n\n2.1\n\n\nWe begin by creating the “Total columns” parameter. In our scenario, we wish to generate 3x3 tables with a value of 3 for each column.\n\n\n\n2.2\n\n\nCreate the Calculated Field “Index”, “Column”, and “Row” with the following formula\nIndex = INT((INDEX())%[Total columns]^2+1\nColumn = INT(([Index]-1)%[Total columns])+1\nRow = INT(([Index]-[Column])/[Total columns])+1\n\n\n\n2.3\n\n\nDrag the “Column” Calculated Field into the Columns section. Drag the Row calculated field into the Rows section\nMake sure that the Column and Row are set as Discrete type\n\n\n\n2.4\n\n\nCreate the Trellis plot of 3x3 age-sex pyramid according to the Planning Area by setting the fields as depicted in the image\nStart by dragging the PA field into Filters and then selecting the focus area (top 9 populous)\nThe drag Index followed by PA into the marks\nDrag the fields Male Pop and Female Pop into the Columns pane, while AG is dragged into the Rows window\n\n\n\n2.5\n\n\nConfigure the Column pill to be computed using PA and repeat for Row\n\n\n\n2.6\n\n\nSet the Male Pop axis to be reversed\n\n\n\n2.7\n\n\nSet the color for Male Pop and Female Pop to be different so the spectator may easily distinguish gender\n\n\n\n2.8\n\n\nSort the age range so that 0-9 is at the bottom and 90 and above is at the top\n\n\n\n2.9\n\n\nHide header of Column and Row\n\n\n\n2.10\n\n\nEdit the SUM([Male Pop]) and SUM([Female Pop]) formulas as follows to display the percentage of each gender in each age group for each Planning Area\nSUM([Male Pop]) = SUM([Male Pop]) / (TOTAL(SUM([Male Pop])) + TOTAL(SUM([Female Pop])))\nSUM([Female Pop]) = SUM([Female Pop]) / (TOTAL(SUM([Male Pop])) + TOTAL(SUM([Female Pop])))\n\n\n\n\n\n\n\n5. Reference\nBetzendahl, L. (2019, April 25). Trellis Charts and Color Highlighting. Viz Zen Data. Retrieved January 21, 2023, from https://vizzendata.com/2019/04/25/trellis-charts-and-color-highlighting/\nDataCrunch(2020, June 22). A Detailed Guide on How to Create a Tableau Pareto Chart | DataCrunchCorp. A Detailed Guide on How to Create a Tableau Pareto Chart | DataCrunchCorp. Retrieved January 21, 2023, from https://datacrunchcorp.com/tableau-pareto-chart/\nEgervari. (n.d.). The Data School - Displaying multiple Charts in one Worksheet – The Trellis Chart. The Data School - Displaying Multiple Charts in One Worksheet – the Trellis Chart. Retrieved January 21, 2023, from https://www.thedataschool.co.uk/frederik-egervari/displaying-multiple-charts-in-one-worksheet-the-trellis-chart/\nSleeper. (2017, August 22). How to Make Trellis / Tile / Small Multiple Maps in Tableau | Playfair Data. Playfair Data. Retrieved January 21, 2023, from https://playfairdata.com/how-to-make-trellis-tile-small-multiple-maps-in-tableau/\nTarannum. (2017, February 17). Workout Wednesday Week 7 - Dynamic Trellis Chart. Visual Vantage. Retrieved January 21, 2023, from http://www.tarannum.io//2017/02/17/workout-wednesday-week7.html"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "title": "Take-home Exercise 2",
    "section": "",
    "text": "1. The task\nIn this take-home exercise, we are required to:\n\nselect one of the Take-home Exercise 1 prepared by our classmate,\ncritic the submission in terms of clarity and aesthetics,\nprepare a sketch for the alternative design by using the data visualisation design principles and best practices we had learned in Lesson 1 and 2, and\nremake the original design by using ggplot2, ggplot2 extensions and tidyverse packages.\n\nThe purpose of DataVis Makeover is to improve on the original visualisation. Focus on what works, what doesn’t work, why those things don’t work, and how you made it better. You should try stick to the fields in the data set provided and improve upon the original visualisation.\n\n\n2. Data\n“Singapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling, June 2022” is used to prepare the analytical visualization. It is available at Department of Statistics, Singapore(SingStat).\n\nMetadata\nPA = Planning Area\nSZ = Subzone\nAG = Age Group\nSex = Sex\nTOD = Type of Dwelling\nPop = Resident Count\nTime = Time / Period\nNote:\n\nFor June 2022, Planning Areas refer to areas demarcated in the Urban Redevelopment Authority’s Master Plan 2019.\nData from 2003 onwards exclude residents who have been away from Singapore for a continuous period of 12 months or longer as at the reference period.\nThe figures have been rounded to the nearest 10. 4) The data may not add up due to rounding.\n\nDate generated: 29/02/2022 Source: Singapore Department of Statistics\n\n\n\n3. Critique on Original Design\nAge-sex pyramid is an analytical visualization commonly used by demographers to reveal the structure of population by gender and age group. In addition, the Trellis plot style is employed to facilitate comparisons between planning areas.\nBelow is the original design of the plot that will be redesigned.\n\n\n\n\n\n\nClarity\nWhen developing a plot, we should have a particular message or insights to communicate to the audience. In our scenario, possible inferences from the trellis age-sex pyramid are as follows:\n\nThe pyramidal structure that represents the distribution of each gender within each age group in each planning area\nThe varied distribution across each region\n\nIn this section, we will evaluate the original plot based on how effectively it conveyed the above inferences to the audience.\n\n(a) Data Selection\nInstead of presenting the entire data set to the viewer, we might pick sample subsets of data that are appropriate for the intended message. By mapping all planning regions, it is extremely difficult for the viewer to compare areas of interest.\n\n\n(b) Graph Title\nInstead of the conventional title, an interesting insight from the graph could be used as as the main title for the chart, as it encourages curiosity among readers to dig deeper into it. The original title lacks both clarity and appeal.\n\n\n(c) Plot arrangement\nThe primary benefit of Trellis plot is that it facilitates comparison. The initial layout placed each plot on the diagonal, making comparison very difficult for the observer. It also restricts the number of plots that may be seen at once.\n\n\n(d) Y-Axis labeling\nThe initial axis represented age range by a single integer. This makes it unclear to the observer whether the displayed value represents the age or the upper or lower bound. Additionally, the Null group is not a representative designation.\n\n\n(e) x-Axis not able to see\nDue to the size of the plot, the x-Axis label cannot be seen unless the viewer scrolls all the way down. Not only is the bar size unclear, but the gender is also difficult to determine.\n\n\n(f) Color representation\nColor is very crucial in visualizing. However, the original plot does not make advantage of it, making it more difficult for viewers to identify gender.\n\n\n(f) Data Label\nThe planning area label is plotted on the axis rather than within the plot, making it difficult for the observer to identify the planning area to which the plot belongs.\n\n\n(g) Resolution settings\nThe resolution is not adjustable. In a smaller screen, the axis is not visible.\n\n\n\n\n4. Proposed Sketch\n\n\n\n5. Step to create plot in R\n\n1. Installing and loading the required libraries\nThe code chunk below is used to install and load the required packages onto RStudio.\n\ntidyverse : A collection of core packages designed for data science, used extensively for data preparation and wrangling.\nplotly: Used for creating interactive web-based graphs.\nggplot2: A system for ‘declaratively’ creating graphics, based on “The Grammar of Graphics”.\n\n\npackages = c('tidyverse', 'plotly', 'ggplot2')\nfor(p in packages){\n  if(!require(p,character.only = T)){\n    install.packages(p)\n  }\n  library(p,character.only = T)\n}\n\n\n\n2. Importing the dataset\nThe source file is in csv format, hence read_csv of readr package is used to import the dataset.\n\nPopdata2022 <- read_csv(\"Data/respopagesextod2022.csv\")\nsummary(Popdata2022)\n\n      PA                 SZ                 AG                Sex           \n Length:100928      Length:100928      Length:100928      Length:100928     \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n     TOD                 Pop               Time     \n Length:100928      Min.   :   0.00   Min.   :2022  \n Class :character   1st Qu.:   0.00   1st Qu.:2022  \n Mode  :character   Median :   0.00   Median :2022  \n                    Mean   :  40.44   Mean   :2022  \n                    3rd Qu.:  20.00   3rd Qu.:2022  \n                    Max.   :2300.00   Max.   :2022  \n\n\nUse head command to see the first 5 rows of the data.\n\nhead(Popdata2022,5)\n\n# A tibble: 5 × 7\n  PA         SZ                     AG     Sex   TOD                   Pop  Time\n  <chr>      <chr>                  <chr>  <chr> <chr>               <dbl> <dbl>\n1 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 1- and 2-Room …     0  2022\n2 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 3-Room Flats       10  2022\n3 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 4-Room Flats       10  2022\n4 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 5-Room and Exe…    30  2022\n5 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HUDC Flats (exclud…     0  2022\n\n\n\n\n3. Wrangling data\n\n3.1 Select focus column\nIn this stage, we take only four columns from the original dataset Popdata2022, namely PA (Planning Area), AG (Age Group), Sex (Gender), and Pop (Number of People), and assign them to the new dataset Popdata.\n\nPopdata <- Popdata2022 %>% \n  select(PA, AG, Sex, Pop)\nhead(Popdata,5)\n\n# A tibble: 5 × 4\n  PA         AG     Sex     Pop\n  <chr>      <chr>  <chr> <dbl>\n1 Ang Mo Kio 0_to_4 Males     0\n2 Ang Mo Kio 0_to_4 Males    10\n3 Ang Mo Kio 0_to_4 Males    10\n4 Ang Mo Kio 0_to_4 Males    30\n5 Ang Mo Kio 0_to_4 Males     0\n\n\n\n\n3.2 Deriving the frequency count by Planning Area, Age Group, Sex\nAs we want to display the number of people in each age group and gender for each planning region, we use the group by command and drop off the na value. Then, the new column sumPop is derived to represent the data.\n\nPopdata <- Popdata %>% \n  group_by(PA, AG, Sex) %>% \n  na.omit() %>% \n  summarize(sumPop = sum(Pop))\nhead(Popdata,5)\n\n# A tibble: 5 × 4\n# Groups:   PA, AG [3]\n  PA         AG       Sex     sumPop\n  <chr>      <chr>    <chr>    <dbl>\n1 Ang Mo Kio 0_to_4   Females   2480\n2 Ang Mo Kio 0_to_4   Males     2530\n3 Ang Mo Kio 10_to_14 Females   3320\n4 Ang Mo Kio 10_to_14 Males     3350\n5 Ang Mo Kio 15_to_19 Females   3620\n\n\n\n\n3.3 Filter Planning Area\nWe may use the unique command on column PA to list every planning area in the dataset.\n\nunique(Popdata$PA)\n\n [1] \"Ang Mo Kio\"              \"Bedok\"                  \n [3] \"Bishan\"                  \"Boon Lay\"               \n [5] \"Bukit Batok\"             \"Bukit Merah\"            \n [7] \"Bukit Panjang\"           \"Bukit Timah\"            \n [9] \"Central Water Catchment\" \"Changi\"                 \n[11] \"Changi Bay\"              \"Choa Chu Kang\"          \n[13] \"Clementi\"                \"Downtown Core\"          \n[15] \"Geylang\"                 \"Hougang\"                \n[17] \"Jurong East\"             \"Jurong West\"            \n[19] \"Kallang\"                 \"Lim Chu Kang\"           \n[21] \"Mandai\"                  \"Marina East\"            \n[23] \"Marina South\"            \"Marine Parade\"          \n[25] \"Museum\"                  \"Newton\"                 \n[27] \"North-Eastern Islands\"   \"Novena\"                 \n[29] \"Orchard\"                 \"Outram\"                 \n[31] \"Pasir Ris\"               \"Paya Lebar\"             \n[33] \"Pioneer\"                 \"Punggol\"                \n[35] \"Queenstown\"              \"River Valley\"           \n[37] \"Rochor\"                  \"Seletar\"                \n[39] \"Sembawang\"               \"Sengkang\"               \n[41] \"Serangoon\"               \"Simpang\"                \n[43] \"Singapore River\"         \"Southern Islands\"       \n[45] \"Straits View\"            \"Sungei Kadut\"           \n[47] \"Tampines\"                \"Tanglin\"                \n[49] \"Tengah\"                  \"Toa Payoh\"              \n[51] \"Tuas\"                    \"Western Islands\"        \n[53] \"Western Water Catchment\" \"Woodlands\"              \n[55] \"Yishun\"                 \n\n\nThen we select 9 areas that we want to represent i.e. Bedok, Tampines, Jurong West, Sengkang, Woodlands, Hougang, Yishun, Choa Chu Kang, and Punggol.\n\nPopdata <- Popdata %>% \n  filter(PA %in% c(\"Bedok\", \"Tampines\", \"Jurong West\", \n                   \"Sengkang\", \"Woodlands\", \"Hougang\", \n                   \"Yishun\", \"Choa Chu Kang\", \"Punggol\"))\n\n\n\n3.4 Binning Age-group\nOnce more, we use the unique command to view the Age group in the original dataset.\n\nunique(Popdata$AG)\n\n [1] \"0_to_4\"      \"10_to_14\"    \"15_to_19\"    \"20_to_24\"    \"25_to_29\"   \n [6] \"30_to_34\"    \"35_to_39\"    \"40_to_44\"    \"45_to_49\"    \"5_to_9\"     \n[11] \"50_to_54\"    \"55_to_59\"    \"60_to_64\"    \"65_to_69\"    \"70_to_74\"   \n[16] \"75_to_79\"    \"80_to_84\"    \"85_to_89\"    \"90_and_over\"\n\n\nThe Age-group will be recoded according to the table below. Each group will have a 10-year age range.\n\n\n\nOriginal\nRecoded\n\nOriginal\nRecoded\n\n\n\n\n“0_to_4”\n“0-9”\n\n“50_to_54”\n“50-59”\n\n\n“5_to_9”\n“0-9”\n\n“55_to_59”\n“50-59”\n\n\n“10_to_14”\n“10-19”\n\n“60_to_64”\n“60-69”\n\n\n“15_to_19”\n“10-19”\n\n“65_to_69”\n“60-69”\n\n\n“20_to_24”\n“20-29”\n\n“70_to_74”\n“70-79”\n\n\n“25_to_29”\n“20-29”\n\n“75_to_79”\n“70-79”\n\n\n“30_to_34”\n“30-39”\n\n“80_to_84”\n“80-89”\n\n\n“35_to_39”\n“30-39”\n\n“85_to_89”\n“80-89”\n\n\n“40_to_44”\n“40-49”\n\n“90_and_over”\n“>90”\n\n\n“45_to_49”\n“40-49”\n\n\n\n\n\n\n\nPopdata <- Popdata %>% \n  mutate(AG = as.factor(AG)) %>%\n  mutate(AG = fct_collapse(AG,\n                           \"0-9\" = c(\"0_to_4\",\"5_to_9\"),\n                           \"10-19\" = c(\"10_to_14\",\"15_to_19\"),\n                           \"20-29\" = c(\"20_to_24\",\"25_to_29\"),\n                           \"30-39\" = c(\"30_to_34\",\"35_to_39\"),\n                           \"40-49\" = c(\"40_to_44\",\"45_to_49\"),\n                           \"50-59\" = c(\"50_to_54\",\"55_to_59\"),\n                           \"60-69\" = c(\"60_to_64\",\"65_to_69\"),\n                           \"70-79\" = c(\"70_to_74\",\"75_to_79\"),\n                           \"80-89\" = c(\"80_to_84\",\"85_to_89\"),\n                           \">90\" = c(\"90_and_over\")\n                           )) %>% \n  mutate(AG = fct_relevel(AG, \"0-9\", \"10-19\", \"20-29\", \"30-39\", \"40-49\", \n                          \"50-59\", \"60-69\", \"70-79\", \"80-89\", \">90\")) %>% \n  group_by(PA, AG, Sex) %>% \n  na.omit() %>%\n  summarize(sumPop = sum(sumPop)) %>% \n  rename(Pop = sumPop)\nhead(Popdata,5)\n\n# A tibble: 5 × 4\n# Groups:   PA, AG [3]\n  PA    AG    Sex       Pop\n  <chr> <fct> <chr>   <dbl>\n1 Bedok 0-9   Females 10670\n2 Bedok 0-9   Males   11050\n3 Bedok 10-19 Females 12880\n4 Bedok 10-19 Males   13210\n5 Bedok 20-29 Females 16130\n\n\nTo make the pyramid center, convert data from one gender to a negative value.\n\nPopdata_M <- Popdata %>%\n                  filter(`Sex` ==  \"Males\") %>%\n                  mutate (Pop = -Pop)\n\nPopdata_F <- Popdata %>%\n                  filter(`Sex` ==  \"Females\") \n\nPopdata <- rbind(Popdata_M,Popdata_F)\nPopdata\n\n# A tibble: 180 × 4\n# Groups:   PA, AG [90]\n   PA    AG    Sex      Pop\n   <chr> <fct> <chr>  <dbl>\n 1 Bedok 0-9   Males -11050\n 2 Bedok 10-19 Males -13210\n 3 Bedok 20-29 Males -16920\n 4 Bedok 30-39 Males -18000\n 5 Bedok 40-49 Males -18740\n 6 Bedok 50-59 Males -19960\n 7 Bedok 60-69 Males -20050\n 8 Bedok 70-79 Males -12390\n 9 Bedok 80-89 Males  -4040\n10 Bedok >90   Males   -660\n# … with 170 more rows\n\n\n\n\n\n4. Plotting the chart\nLet us begin with a basic pyramid to depict the overall population distribution of age and gender in the nine planning districts chosen.\n\n  ggplot(Popdata, aes(x = Pop, y = AG, fill = Sex, ease_aes('linear'))) +\n  geom_col() +\n  scale_x_continuous(breaks = seq(-150000, 150000, 50000), \n                     labels = paste0(as.character(c(seq(150, 0, -50), seq(50, 150, 50))),\"k\")) +\n  labs (x = \"Population size\", \n        y = \"Age Group\", \n        title='Singapore Age-Sex Population Pyramid') +\n  theme_bw() +\n  theme(axis.ticks.y = element_blank()) +\n  scale_fill_manual(values = c(\"Males\" = \"#00C19A\", \"Females\" = \"#F8766D\"))\n\n\n\n\nFollowing that, we develop a Trellis plot 3x3 to facilitate comparison across planning areas. The nice age-sex pyramid for each planning area is now available.\n\nxbrks <- c(-20000, -10000, 0, 10000, 20000)\nxlabls <- paste0(as.character(c('20k', '10k', '0', '10k', '20k')))\n\np <- ggplot(Popdata, \n      aes (x = AG, y = Pop, fill = Sex)) +\n      geom_bar(stat = \"identity\", width = .6 ) +\n      labs (x = \"Population\", \n            y = \"Age Group\")+\n      ggtitle(\"<span style='font-size: 12pt;'>What is the demographic breakdown of Singaporeans in the top 9 most populous Planning Areas?\")+\n      coord_flip() +\n      theme_bw() +\n      theme(axis.ticks.y = element_blank()) +\n      scale_fill_manual(values = c(\"Males\" = \"#00C19A\", \"Females\" = \"#F8766D\"))\n      \nxbrks1 <- c(-20000, -10000, 0, 10000, 20000)\nxlabls1 <- paste0(as.character(c('20k', '10k', '0', '10k', '20k')))\np1 <- p +  facet_wrap (~ PA, nrow = 3, ncol = 3) + \n            xlab(\"Age Group\") +\n            scale_y_continuous(breaks = xbrks1, labels = xlabls1, name = \"Population Size\")\n\nggplotly(p1)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html",
    "title": "Take-home Exercise 3",
    "section": "",
    "text": "1. The task\nIn this take-home exercise, you are required to uncover the salient patterns of the resale prices of public housing property by residential towns and estates in Singapore by using appropriate analytical visualisation techniques learned in Lesson 4: Fundamentals of Visual Analytics. Students are encouraged to apply appropriate interactive techniques to enhance user and data discovery experiences.\nFor the purpose of this study, the focus should be on 3-ROOM, 4-ROOM and 5-ROOM types. You can choose to focus on either one housing type or multiple housing types. The study period should be on 2022.\nThe write-up of the take-home exercise should include but not limited to the followings:\n\nDescribe the selection and designed consideration of the analytical data visualisation used. The discussion should limit to not more than 150 words each.\nA reproducible description of the procedures used to prepare the analytical visualisation. Please refer to the peer submission I shared.\nA write-up of not more than 100 words to discuss the patterns reveal by each analytical visualisation prepared.\n\n\n\n2. Packages\nThe code chunk below is used to install and load the required packages onto RStudio.\n\ntidyverse: A collection of core packages designed for data science, used extensively for data preparation and wrangling. (readr, ggplot2, dplyr, purrr, tidyr, tibble)\npsych: A general purpose toolbox for personality, psychometric theory and experimental psychology. Functions are primarily for multivariate analysis and scale construction using factor analysis, principal component analysis, cluster analysis and reliability analysis, although others provide basic descriptive statistics.\nlubridate: Provides tools that make it easier to parse and manipulate dates. These tools are grouped below by common purpose.\nggrepel: This package contains extra geoms for ggplot2.\n\n\npackages = c('tidyverse', 'ggstatsplot', 'psych', 'lubridate', 'ggrepel', 'plotly')\nfor(p in packages){\n  if(!require(p,character.only = T)){\n    install.packages(p)\n  }\n  library(p,character.only = T)\n}\n\n\n\n3. Data\nThe original dataset ’Resale flat princes based on registration date from Jan-2017 onwards’ was obtained from Data.gov.sg. This dataset provides information on all resale HDB flat transactions from 2017 to 2023. The notable features in this dataset are as follows:\ni) town: the town of the associated HDB flat\nii) flat_type: the type of flat of the associated HDB flat. In Singapore, there are 1-room flats up to 5-room flats, as well as executive flats, which are slightly bigger than 5-room flats. (The remaining flat type: Multi-generational flats, are few and far between)\niii) block: the block of the associated HDB flat\niv) street: the street of the associated HDB flat\nv) storey_range: the storey range of the associated HDB flat. In this dataset, the storey range is given in a range of 3 (e.g. 10 to 12 , which means the flat is based on the 10th to 12th storey).\nvi) floor_area_sqm: the floor area of the associated HDB flat in square meter.\nvii) lease_commence_date: The month and year from when the lease (i.e., 99-year lease, 999-year lease, or freehold) on the property starts.\nvii) remaining_lease: the remaining lease of the associated HDB flat in months and years\nviii) resale_price: the resale price of the assocaited HDB flat\n\nData Preparation\nThe source file is in csv format, hence read_csv of readr package is used to import the dataset. Then we use summary function to see the statistical summary of our original data set. From te result below, we will see that our original data has 146,215 rows with 11 columns ( 8 categorical fields and 3 numeric fields).\n\n\nCode\n# Read data \ndata_raw <- read_csv(\"data/resale-flat-prices-based-on-registration-date-from-jan-2017-onwards.csv\")\n\n# show data summary\nsummary(data_raw)\n\n\n    month               town            flat_type            block          \n Length:146215      Length:146215      Length:146215      Length:146215     \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n street_name        storey_range       floor_area_sqm    flat_model       \n Length:146215      Length:146215      Min.   : 31.00   Length:146215     \n Class :character   Class :character   1st Qu.: 82.00   Class :character  \n Mode  :character   Mode  :character   Median : 94.00   Mode  :character  \n                                       Mean   : 97.61                     \n                                       3rd Qu.:113.00                     \n                                       Max.   :249.00                     \n lease_commence_date remaining_lease     resale_price    \n Min.   :1966        Length:146215      Min.   : 140000  \n 1st Qu.:1985        Class :character   1st Qu.: 358000  \n Median :1996        Mode  :character   Median : 448000  \n Mean   :1996                           Mean   : 477991  \n 3rd Qu.:2007                           3rd Qu.: 565000  \n Max.   :2019                           Max.   :1418000  \n\n\nUse head command to see the first 5 rows of the data.\n\n\nCode\nknitr::kable(\n  head(data_raw,5)\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmonth\ntown\nflat_type\nblock\nstreet_name\nstorey_range\nfloor_area_sqm\nflat_model\nlease_commence_date\nremaining_lease\nresale_price\n\n\n\n\n2017-01\nANG MO KIO\n2 ROOM\n406\nANG MO KIO AVE 10\n10 TO 12\n44\nImproved\n1979\n61 years 04 months\n232000\n\n\n2017-01\nANG MO KIO\n3 ROOM\n108\nANG MO KIO AVE 4\n01 TO 03\n67\nNew Generation\n1978\n60 years 07 months\n250000\n\n\n2017-01\nANG MO KIO\n3 ROOM\n602\nANG MO KIO AVE 5\n01 TO 03\n67\nNew Generation\n1980\n62 years 05 months\n262000\n\n\n2017-01\nANG MO KIO\n3 ROOM\n465\nANG MO KIO AVE 10\n04 TO 06\n68\nNew Generation\n1980\n62 years 01 month\n265000\n\n\n2017-01\nANG MO KIO\n3 ROOM\n601\nANG MO KIO AVE 5\n01 TO 03\n67\nNew Generation\n1980\n62 years 05 months\n265000\n\n\n\n\n\n\n# Create field \"quarter\", \"month\", and \"year\ndata <- data_raw %>%\n  mutate(quarter = quarter(ym(month))) %>%\n  mutate(Month = month(ym(month))) %>%\n  mutate(Year = year(ym(month))) %>% \n  mutate(month = as.Date(paste(month, \"-01\", sep=\"\"), format=\"%Y -%m -%d\")) %>% \n  rename(\"YM\" = \"month\")\n\n# Change format of price to represent in kSGD\ndata <- data %>% \n  mutate(\"resale_price_kSGD\" = resale_price/1000)\n\n# Filter flat types 3-Room, 4-Room, 5-Room and filter only Year of 2022\ndata_2022 <- data %>% \n  filter(flat_type %in% c(\"3 ROOM\",\"4 ROOM\", \"5 ROOM\")) %>%\n  filter(Year == \"2022\")\n\nHere, we can see that our data now only has 24,374 rows left after filter year and flat type.\n\n\n       YM                 town            flat_type            block          \n Min.   :2022-01-01   Length:24374       Length:24374       Length:24374      \n 1st Qu.:2022-04-01   Class :character   Class :character   Class :character  \n Median :2022-07-01   Mode  :character   Mode  :character   Mode  :character  \n Mean   :2022-06-16                                                           \n 3rd Qu.:2022-09-01                                                           \n Max.   :2022-12-01                                                           \n street_name        storey_range       floor_area_sqm    flat_model       \n Length:24374       Length:24374       Min.   : 51.00   Length:24374      \n Class :character   Class :character   1st Qu.: 81.00   Class :character  \n Mode  :character   Mode  :character   Median : 93.00   Mode  :character  \n                                       Mean   : 94.07                     \n                                       3rd Qu.:110.00                     \n                                       Max.   :159.00                     \n lease_commence_date remaining_lease     resale_price        quarter     \n Min.   :1967        Length:24374       Min.   : 200000   Min.   :1.000  \n 1st Qu.:1985        Class :character   1st Qu.: 428000   1st Qu.:2.000  \n Median :1998        Mode  :character   Median : 515000   Median :3.000  \n Mean   :1997                           Mean   : 536391   Mean   :2.498  \n 3rd Qu.:2014                           3rd Qu.: 610000   3rd Qu.:3.000  \n Max.   :2019                           Max.   :1418000   Max.   :4.000  \n     Month           Year      resale_price_kSGD\n Min.   : 1.0   Min.   :2022   Min.   : 200.0   \n 1st Qu.: 4.0   1st Qu.:2022   1st Qu.: 428.0   \n Median : 7.0   Median :2022   Median : 515.0   \n Mean   : 6.5   Mean   :2022   Mean   : 536.4   \n 3rd Qu.: 9.0   3rd Qu.:2022   3rd Qu.: 610.0   \n Max.   :12.0   Max.   :2022   Max.   :1418.0   \n\n\nOur data is now ready for visualization.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYM\ntown\nflat_type\nblock\nstreet_name\nstorey_range\nfloor_area_sqm\nflat_model\nlease_commence_date\nremaining_lease\nresale_price\nquarter\nMonth\nYear\nresale_price_kSGD\n\n\n\n\n2022-01-01\nANG MO KIO\n3 ROOM\n320\nANG MO KIO AVE 1\n07 TO 09\n73\nNew Generation\n1977\n54 years 05 months\n358000\n1\n1\n2022\n358\n\n\n2022-01-01\nANG MO KIO\n3 ROOM\n225\nANG MO KIO AVE 1\n07 TO 09\n67\nNew Generation\n1978\n55 years 01 month\n355000\n1\n1\n2022\n355\n\n\n2022-01-01\nANG MO KIO\n3 ROOM\n331\nANG MO KIO AVE 1\n07 TO 09\n68\nNew Generation\n1981\n58 years\n338000\n1\n1\n2022\n338\n\n\n2022-01-01\nANG MO KIO\n3 ROOM\n534\nANG MO KIO AVE 10\n07 TO 09\n82\nNew Generation\n1980\n57 years 02 months\n420000\n1\n1\n2022\n420\n\n\n2022-01-01\nANG MO KIO\n3 ROOM\n578\nANG MO KIO AVE 10\n04 TO 06\n67\nNew Generation\n1980\n57 years 01 month\n328000\n1\n1\n2022\n328\n\n\n\n\n\n\n\n\n4. Exploratory Data Analysis and Visualization\nUsing the describe() function on the continuous variables, you can get a sense-check of the data and see if there were any errors in the feature engineering. These are the summary statistics that were observed:\n\nResale Price — The prices of the flats range between $200K to $1,418K with a mean of $536K\nFloor Area — The sizes of the flats range between 51sqm to 159sqm, with a mean of 94.07sqm\nRemaining Lease — The lease commence date of the flats range between 43 years to 96 years\n\n\n\nCode\nknitr:: kable(\n  data_2022 %>% \n    select(floor_area_sqm, remaining_lease, resale_price) %>%\n    na.omit() %>% \n    describe()\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvars\nn\nmean\nsd\nmedian\ntrimmed\nmad\nmin\nmax\nrange\nskew\nkurtosis\nse\n\n\n\n\nfloor_area_sqm\n1\n24374\n94.07497\n19.32042\n93\n93.98708\n25.2042\n51\n159\n108\n-0.0566164\n-0.8508218\n0.1237523\n\n\nremaining_lease*\n2\n24374\n376.28600\n180.21525\n377\n380.98656\n247.5942\n1\n638\n637\n-0.0378131\n-1.3214875\n1.1543251\n\n\nresale_price\n3\n24374\n536391.16792\n157993.72136\n515000\n520461.65003\n133434.0000\n200000\n1418000\n1218000\n1.0935155\n1.8129983\n1011.9904756\n\n\n\n\n\nTo gain insights from the data, we will now develop the visualizations shown below.\n\n\n\n\n\n\n4.1 Geofacet : Trend of Singapore Resale flat prices in 2022\nThe geofacet package was chosen to provide a high-level data visualization based on their location. Price trends for each room type are depicted by town using multiple line plots of varying colors to identify each room type. The geofacet maps, which plot based on its geographical position, make it easier to compare areas nearby.\nThe geofacet package requireds a grid file that will be used to assign row and column positions to each area. Thus, it is crucial to ensure that the name in the grid file corresponds to the name of our data area.\nThe following packages are required for plotting geofacet.\n\ngeofacet: The geofacet R package provides a way to flexibly visualize data for different geographical regions by providing a ggplot2 faceting function facet_geo() which works just like ggplot2’s built-in faceting, except that the resulting arrangement of panels follows a grid that mimics the original geographic topology as closely as possible.\n\nTo generate a geofacet plot, we first import our data and Singapore’s grid table. The case of the grid area names is changed to uppercase. In our data, KALLANG is referred to as KALLANG/WHAMPOA, whereas the grid refers to CENTRAL AREA as DOWNTOWN CORE. After correcting these mismatches, we combine the tables to add the column and row fields to our primary data.\n\n\nCode\n# Import data \ngeofacet <- data_2022\n\n# Recode town name to match with area grid\ngeofacet <- geofacet %>% \n  mutate(town = fct_collapse(town, \"KALLANG\" = \"KALLANG/WHAMPOA\"))\n\n# Import the area grid data.\narea_grid <- read_csv(\"data/areagrid.csv\")\n\n# Recode name to match with geofacet data\narea_grid$name <- toupper(area_grid$name)\n\narea_grid <- area_grid %>% \n  mutate(name = fct_collapse(name, \"CENTRAL AREA\" = \"DOWNTOWN CORE\"))\n\ngeofacet <- geofacet %>%\n  group_by(YM, town, flat_type) %>%\n  summarise(avgprice = mean(resale_price, na.rm = TRUE),\n            medprice = median(resale_price, na.rm = TRUE))%>%\n  ungroup()\n\n# merge table with town name\ngeofacet_price <- inner_join(geofacet, area_grid,\n                      by = c(\"town\" = \"name\"))\n\ncommon_grid <- area_grid[area_grid$name %in% unique(geofacet$town),]\n\n\nThis is how the data used for plotting geofacet look likes.\n\n\n\n\n\nYM\ntown\nflat_type\navgprice\nmedprice\nrow\ncol\ncode\n\n\n\n\n2022-01-01\nANG MO KIO\n3 ROOM\n349068.4\n343888\n3\n8\nAM\n\n\n2022-01-01\nANG MO KIO\n4 ROOM\n491894.3\n457500\n3\n8\nAM\n\n\n2022-01-01\nANG MO KIO\n5 ROOM\n741989.8\n695000\n3\n8\nAM\n\n\n2022-01-01\nBEDOK\n3 ROOM\n347235.2\n338000\n4\n11\nBD\n\n\n2022-01-01\nBEDOK\n4 ROOM\n520911.6\n475000\n4\n11\nBD\n\n\n\n\n\nAccording to the plot, the resale price trend in the Central area, particularly room types 4-room and 5-room, is much greater than the other locations with a rising trends in Q4. In the first quarter, the average price of a 5-room type swing increased significantly. We observe a low and consistent pricing trend at the country’s border, which is distant from the central region.\n\nlibrary(geofacet)\n\nggplot(geofacet_price, aes(x = YM, y = avgprice)) +\n  geom_line(aes(color = as.factor(flat_type))) +\n  scale_x_date(date_labels = \"%b\") +\n  facet_geo(~ town, grid = common_grid) +\n  labs(title = \"Trend of Singapore Resale flat prices in 2022\") +\n  scale_y_continuous(breaks = c(250000, 500000, 750000, 1000000, 1250000)) +\n  theme(plot.title = element_text(size=22),\n        axis.text.x = element_text(size = 10, angle = 45),\n        axis.text.y = element_text(size = 10),\n        strip.text = element_text(size = 10),\n        legend.position = \"top\"\n  )\n\n\n\n\n\n\n4.2 Tmap : Total floor area transacted by town in 2022\nWe want to view the floor space transacted according to the town on this plot. Because floor area is a continuous variable, the tmap package is used to represent the sum of total floor space in each town using a distinct color shade.\nThe following packages are used for plotting tmap.\n\ntmap: This package is used for creating thematic map visualization. Thematic maps are geographical maps in which spatial data distributions are visualized. This package offers a flexible, layer-based, and easy to use approach to create thematic maps, such as choropleths and bubble maps. It is based on the grammar of graphics, and resembles the syntax of ggplot2.\nsf: Create sf, which extends data.frame-like objects with a simple feature list column.\n\nTo begin, we import the shape file needed to plot the lay-over layer on tmap and arrange the data by town. The data is then joined to map the town with the polygon from the shape file.\n\n\nCode\n# call library\nlibrary(tmap)\nlibrary(sf)\n\n# Read shape file for the polygon layover on the map\nshapefile <- st_read(\"shapefile/MP14_SUBZONE_NO_SEA_PL.shp\")\n\n# Prepare data to plot on the map\ntmapdata <- data_2022 %>% \n  group_by(town) %>% \n  summarise(sumfloorarea=sum(floor_area_sqm)) %>% \n  mutate(town = fct_collapse(town, \"KALLANG\" = \"KALLANG/WHAMPOA\"))\n\n\nshapefile <- shapefile %>% \n  mutate(PLN_AREA_N = fct_collapse(PLN_AREA_N, \"CENTRAL AREA\" = \"DOWNTOWN CORE\"))\n\ndata_map_area <- left_join(shapefile, tmapdata, by= c(\"PLN_AREA_N\" = \"town\"))\n\n\nThis is how the data for plotting tmap looks like.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOBJECTID\nSUBZONE_NO\nSUBZONE_N\nSUBZONE_C\nCA_IND\nPLN_AREA_N\nPLN_AREA_C\nREGION_N\nREGION_C\nINC_CRC\nFMEL_UPD_D\nX_ADDR\nY_ADDR\nSHAPE_Leng\nSHAPE_Area\nsumfloorarea\ngeometry\n\n\n\n\n1\n2\nPEOPLE’S PARK\nOTSZ02\nY\nOUTRAM\nOT\nCENTRAL REGION\nCR\nB4120D23006C932A\n2016-05-11\n28831.78\n29419.65\n1822.1927\n93140.44\nNA\nMULTIPOLYGON (((29099.02 29…\n\n\n2\n2\nBUKIT MERAH\nBMSZ02\nN\nBUKIT MERAH\nBM\nCENTRAL REGION\nCR\n1C51019439A68700\n2016-05-11\n26360.80\n29384.14\n3074.9632\n411722.82\n83041\nMULTIPOLYGON (((26750.09 29…\n\n\n3\n3\nCHINATOWN\nOTSZ03\nY\nOUTRAM\nOT\nCENTRAL REGION\nCR\n0FF1661344C84AED\n2016-05-11\n29153.97\n29158.04\n4297.5999\n587222.68\nNA\nMULTIPOLYGON (((29161.2 297…\n\n\n4\n4\nPHILLIP\nDTSZ04\nY\nCENTRAL AREA\nDT\nCENTRAL REGION\nCR\n615D4EDDEF809F8E\n2016-05-11\n29706.72\n29744.91\n871.5549\n39437.94\n16712\nMULTIPOLYGON (((29814.11 29…\n\n\n5\n5\nRAFFLES PLACE\nDTSZ05\nY\nCENTRAL AREA\nDT\nCENTRAL REGION\nCR\n72107B11807074F4\n2016-05-11\n29968.62\n29572.76\n1872.7522\n188767.49\n16712\nMULTIPOLYGON (((30137.77 29…\n\n\n\n\n\nThis plot revealed that a significant quantity of floor space was transacted in SENGKANG, YISHUN, WOODLANDS, and PUNGGOL in 2022. Whereas SEMBAWANG, despite being on the border and a neighbor of WOODLANDS and YISHUN, has a relatively low amount of floor space transacted.\n\ntmap_options(check.and.fix = TRUE)\ntmap_mode(\"view\")\n\nqtm(data_map_area, fill=\"sumfloorarea\", fill.id = \"PLN_AREA_N\", title = \"Total floor area transacted by town in 2022\")\n\n\n\n\n\n\n\n\n4.3 Bubble chart : Resale flat type by town\nAs we look for a way to display multiple continuous variables concurrently, the bubble chart is our first choice. The primary purpose of a bubble chart is to illustrate the relationships between numerical variables, and it can represent two to four dimensions. The first two dimensions represent coordinates, while the third represents color and the fourth represents size. In our case, we select 3 variables for this visualization i.e. average price, average housing age, and average floor area.\nggplot2 package is used to create the bubble chart.\n\nggplot2: A system for ‘declaratively’ creating graphics, based on “The Grammar of Graphics”.\n\nAccording to the graph below, the average age of resale apartments in MARINE PARADE is above 45 years, while the average price is in the middle of the price range. CENTRAL AREA has the highest average price, an average age of approximately 30 years, and the smallest average floor area. Whereas, the new flats are located in PUNGGOL, SEMBAWANG, and SENGKANG and have a comparatively large floor area.\n\ndata_2022 %>%\n  group_by(town) %>%\n  # Calculate housing age\n  mutate(housing_age = 2022 - lease_commence_date) %>%\n  summarise(average_price = mean(resale_price_kSGD), average_housing_age = mean(housing_age), average_area = mean(floor_area_sqm)) %>%\n  ggplot(mapping = aes(x=average_housing_age, y=average_price, size = average_area)) +\n  geom_count(aes(color = average_housing_age), alpha = 0.6) +\n  # Change size of count points\n\n  # Add lables next to count points\n  geom_text_repel(aes(label = town),size = 2.0) +\n  scale_size(range = c(.1, 24), name=\"Average floor area\")+\n  scale_y_continuous( limits = c(400, 800)) +\n  scale_x_continuous( limits = c(0, 50)) +\n  theme_minimal() +\n  theme(legend.position = \"top\") +\n  scale_color_viridis_c(option = \"C\")\n\n\n\n\n\n\n4.4 Stacked Bar Chart : Flat type transaction proportion\nWe’re curious about the proportion of transacted flat types in each area. As a result, a stacked bar graph is used, in which the length or height of each bar is proportionally equivalent to the data that it depicts. This type of chart has the flaw of representing bar height in relative terms, which does not reflect the actual quantity. However, it has the advantage of making proportion visualization easier for small groups e.g. Bukit Timah. The stacked bar chart below shows a relatively low number of 3-ROOM type transactions in PUNGGOL and a high proportion of 5-ROOM type transactions in PASIR RIS.\n\n# Proportional stacked bar chart\nggplot(data_2022, aes(y=town, fill=flat_type)) +\n  geom_bar(position = \"fill\") +\n  scale_fill_viridis_d(option = \"E\") +\n  labs(title = \"Flat type transaction proportion\", fill = \"Flat type\",\n       x = \"\", y = \"\")\n# Stacked bar chart\nggplot(data_2022, aes(y=town, fill = flat_type))+\n  geom_bar()+\n    scale_fill_viridis_d(option = \"E\") +\n  labs(title = \"Flat type transaction\", fill = \"Flat type\",\n       x = \"\", y = \"\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n4.5 Scatter Plot : Significant Test of Correlation between resale price and floor area\nScatterplots illustrate the relationship between two numerical variables. Each dot stands for an observation. The position of the two variables along the X (horizontal) and Y (vertical) axes represents their respective values. In this scenario, we evaluate the relationship between price and floor area using a scatter plot.We complement the scatter points with the linear model of a straight line. The various angles of the line reflect the various relationships between price and area in each town.\n\ng <- ggscatterstats(\n  data = data_2022,\n  x = floor_area_sqm,\n  y = resale_price,\n  marginal = FALSE,\n  point.args = list(size = 0.5, stroke = 0, color = \"steelblue\"),\n  smooth.line.args = list(linewidth = 0.5, color = \"grey\", method = \"lm\", formula = y ~ x)) +  facet_wrap (~ town, nrow = 6, ncol = 6) +\n  xlab(\"floor area\") +\n  scale_y_continuous(breaks = c(0,3000,6000,9000,12000), name = \"Resale price\") +\n  labs(title = \"Correlation between resale price and floor area\") \n\nggplotly(g)\n\n\n\n\n\n\n\n4.6 Box plot : Prices fluctuated in 2022 for different flat types\nWe display a quarterly boxplot to illustrate the price trend over time. As room count increases, the average price per square meter drops. There are numerous outliers with extremely high prices per square meter in 3, 4, and 5 ROOM. The type of flat with the highest.\n\ndata_2022 %>%\n  group_by(flat_type) %>%\n  # Extract quarter and price per sqm\n  mutate(price_per_sqm = resale_price_kSGD/floor_area_sqm) %>%\n  ggplot(mapping = aes(x = flat_type, y = price_per_sqm)) +\n  # Make grouped boxplot\n  geom_boxplot(aes(fill = as.factor(quarter)), color = \"grey\") +\n    stat_summary(fun=mean, geom=\"point\", color=\"red\") +\n  theme_minimal() +\n  theme(legend.position = \"top\") +\n  scale_fill_viridis_d(option = \"C\") +\n  # Adjust lables and add title\n  labs(title = \"HDB resale prices in 2022 by flat type\", y=\"Price per square metre (SGD)\", fill = \"Quarter\")\n\n\n\n\n\n\n4.6 Treemap\nTreemaps represent the relative sizes of data categories, enabling for easy identification of the elements that contribute significantly to each category.\nTmap plotting requires the following packages.\n\ntreemap : A treemap is a space-filling visualization of hierarchical structures. This function offers great flexibility to draw treemaps.\nd3treeR : is an R htmlwidget for d3.js treemaps. It is designed to integrate seamlessly with the R treemap package or work with traditional nested JSON hierarchies.\n\n\n# library\nlibrary(treemap)\nlibrary(d3treeR)\n \n# basic tree map\ntreemap(data_2022,\n        index= c(\"town\", \"flat_type\"),\n        vColor = \"resale_price\",\n        vSize= \"floor_area_sqm\",\n        title = \"Resale price of \",\n        title.legend = \"Resale price\",\n        type=\"value\",\n        palette = \"PuOr\",\n        format.legend = list(scientific = FALSE, big.mark = \" \")\n)            \n\n\n\n\n\n\n4.6 Group Box plot : HDB resale prices in 2022 by town\n\ndata_2022 %>%\n  group_by(flat_type) %>%\n  # Extract quarter and price per sqm\n  mutate(price_per_sqm = resale_price_kSGD/floor_area_sqm) %>%\n  ggplot(mapping = aes(x = town, y = price_per_sqm)) +\n  # Make grouped boxplot\n  geom_boxplot(aes(fill = as.factor(flat_type)), color = \"grey\") +\n  theme_minimal() +\n  theme(legend.position = \"top\") +\n  scale_fill_viridis_d(option = \"C\") +\n  # Adjust lables and add title\n  labs(title = \"HDB resale prices in 2022 by town\", y=\"Price per square metre (SGD)\", fill = \"flat_type\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n\n\n\n\n\n4.9 Violin Plot : Difference in resale price between different types of flats\nThe following packages are required for plotting tmap.\n\nggstatplot: an extension of ggplot2 package for creating graphics with details from statistical tests included in the plots themselves and targeted primarily at behavioral sciences community to provide a one-line code to produce information-rich plots.\n\n\nggbetweenstats(\n  data = data_2022,\n  x = 'flat_type', \n  y = 'resale_price_kSGD',\n  type = \"np\",\n  messages = FALSE) +\n  ggtitle(\"What is the difference in resale price between different types of flats?\")\n\n\n\n\n\n\n\n5. Reference\nhttps://xang1234.github.io/pyramidgeofacet/\nhttps://r4ds.had.co.nz/index.html\nhttps://rpubs.com/tskam/Choropleth_Mapping\nhttps://r-graph-gallery.com/267-reorder-a-variable-in-ggplot2.html\nhttps://wangjing.city/wp-content/uploads/2021/05/Looking-into-Singapore-Resale-Flats-Market.html\nhttps://towardsdatascience.com/understanding-and-predicting-resale-hdb-flat-prices-in-singapore-1853ec7069b0\nhttps://rpubs.com/chunwey/LinearR2\nhttps://www.linkedin.com/pulse/data-analytics-understanding-resale-prices-hdb-houses-bannister/?trk=read_related_article-card_title\nhttps://wangjing.city/portfolio/looking-into-singapore-resale-flats-market/\nhttps://stackoverflow.com/questions/1330989/rotating-and-spacing-axis-labels-in-ggplot2\nhttp://www.sthda.com/english/wiki/ggplot2-axis-ticks-a-guide-to-customize-tick-marks-and-labels"
  },
  {
    "objectID": "indexTakehome.html#take-home-exercise-03",
    "href": "indexTakehome.html#take-home-exercise-03",
    "title": "Take-home Exercise",
    "section": "Take-home Exercise 03",
    "text": "Take-home Exercise 03"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "title": "In-class Exercise 5",
    "section": "",
    "text": "Getting Started\nInstall and launching R packages\nRead data\nDrawing the lower corner\ndisplay on upper"
  },
  {
    "objectID": "indexInclass.html#in-class-exercise-04-04-feb-2023",
    "href": "indexInclass.html#in-class-exercise-04-04-feb-2023",
    "title": "In-class Exercise",
    "section": "In-class Exercise 04 (04 Feb 2023)",
    "text": "In-class Exercise 04 (04 Feb 2023)"
  },
  {
    "objectID": "indexInclass.html#in-class-exercise-05-11-feb-2023",
    "href": "indexInclass.html#in-class-exercise-05-11-feb-2023",
    "title": "In-class Exercise",
    "section": "In-class Exercise 05 (11 Feb 2023)",
    "text": "In-class Exercise 05 (11 Feb 2023)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#ggcorrmat",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#ggcorrmat",
    "title": "In-class Exercise 5",
    "section": "ggcorrmat",
    "text": "ggcorrmat\nVisualization of a correlation matrix. The message below x = … explain the significant level. We also have an option to resize the cross according to the significant level.\n\nggstatsplot::ggcorrmat(\n  data = wine, \n  cor.vars = 1:11)\n\n\n\n\n\nggstatsplot::ggcorrmat(\n  data = wine, \n  cor.vars = 1:11,\n  ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                         tl.cex = 10),\n  title    = \"Correlogram for wine dataset\",\n  subtitle = \"Four pairs are no significant at p < 0.05\"\n)\n\n\n\n\nInclude correlation coefficient"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#correlation-plot",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#correlation-plot",
    "title": "In-class Exercise 5",
    "section": "Correlation plot",
    "text": "Correlation plot\nCorrplot is not a ggplot extension but based on Rgraphic\nggcorrplot will require the object .corr which can be generated with the command cor.\n\nwine.cor <- cor(wine[, 1:11])\ncorrplot(wine.cor)\n\n\n\n\nCorrelogram\nThe slimmer one represents highly correlate relationship.\n\ncorrplot(wine.cor, \n         method = \"ellipse\") \n\n\n\n\n\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         type=\"lower\")\n\n\n\n\ncorrplot.mixed allows us to combine the corrplot and the corrmat.\n\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"blue\")\n\n\n\n\nFrom the plot below, we can see the highly correlate group.\n\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         tl.pos = \"lt\",\n         tl.col = \"black\",\n         order=\"hclust\",\n         hclust.method = \"ward.D\",\n         addrect = 3)\n\n\n\n\n\nGeneralised Pairs plot\n\nggpairs(wine, columns = 1:12)\n\n\n\n\n\n\nTernary diagram with R\npackage use\n\npacman::p_load(ggtern, plotly, tidyverse, tidyr)\n\nread data\n\npop_data <- read_csv(\"data/respopagsex2000to2018_tidy.csv\") \n\nprepare data\n\nagpop_mutated <- pop_data %>%\n  mutate(`Year` = as.character(Year))%>%\n  spread(AG, Population) %>%\n  mutate(YOUNG = rowSums(.[4:8]))%>%\n  mutate(ACTIVE = rowSums(.[9:16]))  %>%\n  mutate(OLD = rowSums(.[17:21])) %>%\n  mutate(TOTAL = rowSums(.[22:24])) %>%\n  filter(Year == 2018)%>%\n  filter(TOTAL > 0)\n\nsee how the data look like\n\nagpop_mutated\n\n# A tibble: 234 × 25\n   PA        SZ    Year  AGE0-…¹ AGE05…² AGE10…³ AGE15…⁴ AGE20…⁵ AGE25…⁶ AGE30…⁷\n   <chr>     <chr> <chr>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 Ang Mo K… Ang … 2018      180     270     320     300     260     300     270\n 2 Ang Mo K… Chen… 2018     1060    1080    1080    1260    1400    1880    1940\n 3 Ang Mo K… Chon… 2018      900     900    1030    1220    1380    1760    1830\n 4 Ang Mo K… Kebu… 2018      720     850    1010    1120    1230    1460    1330\n 5 Ang Mo K… Semb… 2018      220     310     380     500     550     500     300\n 6 Ang Mo K… Shan… 2018      550     630     670     780     950    1080     990\n 7 Ang Mo K… Tago… 2018      260     340     430     500     640     690     440\n 8 Ang Mo K… Town… 2018      830     930     930     860    1020    1400    1350\n 9 Ang Mo K… Yio … 2018      160     160     220     260     350     340     230\n10 Ang Mo K… Yio … 2018      810    1070    1300    1450    1500    1590    1390\n# … with 224 more rows, 15 more variables: `AGE35-39` <dbl>, `AGE40-44` <dbl>,\n#   `AGE45-49` <dbl>, `AGE50-54` <dbl>, `AGE55-59` <dbl>, `AGE60-64` <dbl>,\n#   `AGE65-69` <dbl>, `AGE70-74` <dbl>, `AGE75-79` <dbl>, `AGE80-84` <dbl>,\n#   AGE85over <dbl>, YOUNG <dbl>, ACTIVE <dbl>, OLD <dbl>, TOTAL <dbl>, and\n#   abbreviated variable names ¹​`AGE0-4`, ²​`AGE05-9`, ³​`AGE10-14`, ⁴​`AGE15-19`,\n#   ⁵​`AGE20-24`, ⁶​`AGE25-29`, ⁷​`AGE30-34`\n\n\nusing same feature with ggplot2. ggtern add in the z.\n\nggtern(data=agpop_mutated,aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point()"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#heatmap",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#heatmap",
    "title": "In-class Exercise 5",
    "section": "Heatmap",
    "text": "Heatmap\n\npacman::p_load(seriation, dendextend, heatmaply, tidyverse)\n\n\nwh <- read_csv(\"data/WHData-2018.csv\")\nwh\n\n# A tibble: 156 × 12\n   Country        Region Happi…¹ Whisk…² Whisk…³ Dysto…⁴ GDP p…⁵ Socia…⁶ Healt…⁷\n   <chr>          <chr>    <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 Albania        Centr…    4.59    4.70    4.48    1.46   0.916   0.817   0.79 \n 2 Bosnia and He… Centr…    5.13    5.22    5.04    1.88   0.915   1.08    0.758\n 3 Bulgaria       Centr…    4.93    5.02    4.84    1.22   1.05    1.52    0.712\n 4 Croatia        Centr…    5.32    5.40    5.24    1.77   1.12    1.16    0.737\n 5 Czech Republic Centr…    6.71    6.78    6.64    2.49   1.23    1.49    0.854\n 6 Estonia        Centr…    5.74    5.82    5.66    1.46   1.2     1.53    0.737\n 7 Hungary        Centr…    5.62    5.70    5.54    1.97   1.17    1.40    0.732\n 8 Kosovo         Centr…    5.66    5.76    5.57    2.26   0.855   1.23    0.578\n 9 Latvia         Centr…    5.93    6.00    5.86    2.14   1.15    1.45    0.671\n10 Lithuania      Centr…    5.95    6.04    5.87    2.13   1.20    1.53    0.716\n# … with 146 more rows, 3 more variables: `Freedom to make life choices` <dbl>,\n#   Generosity <dbl>, `Perceptions of corruption` <dbl>, and abbreviated\n#   variable names ¹​`Happiness score`, ²​`Whisker-high`, ³​`Whisker-low`,\n#   ⁴​Dystopia, ⁵​`GDP per capita`, ⁶​`Social support`, ⁷​`Healthy life expectancy`\n\n\n\nprepare data\nMove the country column to replace the row name so the heatmap is able to label the x-axis.\n\nrow.names(wh) <- wh$Country\n\nspecify the function used. Taking column 3 and drop country, region, whisker-high, whisker-low, Dystopia.\nNote that wh1 is not dataframe but a data matrix.\n\nwh1 <- dplyr::select(wh, c(3, 7:12))\nwh_matrix <- data.matrix(wh)\n\n\nwh_heatmap <- heatmap(wh_matrix,\n                      Rowv=NA, Colv=NA)\n\n\n\n\n\nwh_heatmap <- heatmap(wh_matrix,\n                      scale=\"column\",\n                      cexRow = 0.6, \n                      cexCol = 0.8,\n                      margins = c(10, 4))\n\n\n\n\n\nheatmaply(mtcars)\n\n\n\n\n\nexcluding\n\nheatmaply(wh_matrix[, -c(1, 2, 4, 5)])"
  }
]