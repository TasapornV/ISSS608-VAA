[
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html",
    "title": "Take-home Exercise 3",
    "section": "",
    "text": "1. The task\nIn this take-home exercise, you are required to uncover the salient patterns of the resale prices of public housing property by residential towns and estates in Singapore by using appropriate analytical visualisation techniques learned in Lesson 4: Fundamentals of Visual Analytics. Students are encouraged to apply appropriate interactive techniques to enhance user and data discovery experiences.\nFor the purpose of this study, the focus should be on 3-ROOM, 4-ROOM and 5-ROOM types. You can choose to focus on either one housing type or multiple housing types. The study period should be on 2022.\nThe write-up of the take-home exercise should include but not limited to the followings:\n\nDescribe the selection and designed consideration of the analytical data visualisation used. The discussion should limit to not more than 150 words each.\nA reproducible description of the procedures used to prepare the analytical visualisation. Please refer to the peer submission I shared.\nA write-up of not more than 100 words to discuss the patterns reveal by each analytical visualisation prepared.\n\n\n\n2. Data\nResale flat princes based on registration date from Jan-2017 onwards should be used to prepare the analytical visualisation. It is available at\n\n\n3. Step to create plot in R\n\n1. Installing and loading the required libraries\nThe code chunk below is used to install and load the required packages onto RStudio.\n\ntidyverse : A collection of core packages designed for data science, used extensively for data preparation and wrangling.\nplotly: Used for creating interactive web-based graphs.\nggplot2: A system for ‘declaratively’ creating graphics, based on “The Grammar of Graphics”.\n\n\npackages = c('readr', 'tidyr', 'ggstatsplot', 'tidyverse', 'plotly', 'ggplot2')\nfor(p in packages){\n  if(!require(p,character.only = T)){\n    install.packages(p)\n  }\n  library(p,character.only = T)\n}\n\n\n\n2. Importing the dataset\nThe source file is in csv format, hence read_csv of readr package is used to import the dataset. From the result below, we will see that our original data has 146,215 rows with 11 columns ( 8 categorical fields and 3 numeric fields).\n\nResale_raw <- read_csv(\"Data/resale-flat-prices-based-on-registration-date-from-jan-2017-onwards.csv\")\nsummary(Resale_raw)\n\n    month               town            flat_type            block          \n Length:146215      Length:146215      Length:146215      Length:146215     \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n street_name        storey_range       floor_area_sqm    flat_model       \n Length:146215      Length:146215      Min.   : 31.00   Length:146215     \n Class :character   Class :character   1st Qu.: 82.00   Class :character  \n Mode  :character   Mode  :character   Median : 94.00   Mode  :character  \n                                       Mean   : 97.61                     \n                                       3rd Qu.:113.00                     \n                                       Max.   :249.00                     \n lease_commence_date remaining_lease     resale_price    \n Min.   :1966        Length:146215      Min.   : 140000  \n 1st Qu.:1985        Class :character   1st Qu.: 358000  \n Median :1996        Mode  :character   Median : 448000  \n Mean   :1996                           Mean   : 477991  \n 3rd Qu.:2007                           3rd Qu.: 565000  \n Max.   :2019                           Max.   :1418000  \n\n\nUse head command to see the first 5 rows of the data.\n\nhead(Resale_raw,5)\n\n# A tibble: 5 × 11\n  month   town     flat_…¹ block stree…² store…³ floor…⁴ flat_…⁵ lease…⁶ remai…⁷\n  <chr>   <chr>    <chr>   <chr> <chr>   <chr>     <dbl> <chr>     <dbl> <chr>  \n1 2017-01 ANG MO … 2 ROOM  406   ANG MO… 10 TO …      44 Improv…    1979 61 yea…\n2 2017-01 ANG MO … 3 ROOM  108   ANG MO… 01 TO …      67 New Ge…    1978 60 yea…\n3 2017-01 ANG MO … 3 ROOM  602   ANG MO… 01 TO …      67 New Ge…    1980 62 yea…\n4 2017-01 ANG MO … 3 ROOM  465   ANG MO… 04 TO …      68 New Ge…    1980 62 yea…\n5 2017-01 ANG MO … 3 ROOM  601   ANG MO… 01 TO …      67 New Ge…    1980 62 yea…\n# … with 1 more variable: resale_price <dbl>, and abbreviated variable names\n#   ¹​flat_type, ²​street_name, ³​storey_range, ⁴​floor_area_sqm, ⁵​flat_model,\n#   ⁶​lease_commence_date, ⁷​remaining_lease\n\n\n\n\n3. Wrangling data\n\n3.1 Filter the analyzing year of 2022\nSeparating column using separate(). Filter only Year of 2022, select interested columns.\n\nResale <-Resale_raw %>%\n  separate(`month`, into = c(\"Year\", \"Month\"), sep = \"-\") %>% \n  filter(Year == \"2022\") %>% \n  select(\"town\", \"flat_type\", \"storey_range\", \"floor_area_sqm\", \"lease_commence_date\", \"resale_price\", \"Year\", \"Month\")\n\n\n\n3.2 Filter flat types 3-Room, 4-Room, 5-Room\n\nResale <- Resale %>% \n  filter(flat_type %in% c(\"3 ROOM\",\"4 ROOM\", \"5 ROOM\"))\n\n\n\n3.3 Change format of price to represent in kSGD\n\nResale <- Resale %>%\n  mutate(resale_price=resale_price/100) %>% \n  rename('resale_price_kSGD' = 'resale_price')\n\nHere, we can see that our data now only has 24,374 rows left after filter year and flat type.\n\nResale\n\n# A tibble: 24,374 × 8\n   town       flat_type storey_range floor_area_sqm lease_…¹ resal…² Year  Month\n   <chr>      <chr>     <chr>                 <dbl>    <dbl>   <dbl> <chr> <chr>\n 1 ANG MO KIO 3 ROOM    07 TO 09                 73     1977    3580 2022  01   \n 2 ANG MO KIO 3 ROOM    07 TO 09                 67     1978    3550 2022  01   \n 3 ANG MO KIO 3 ROOM    07 TO 09                 68     1981    3380 2022  01   \n 4 ANG MO KIO 3 ROOM    07 TO 09                 82     1980    4200 2022  01   \n 5 ANG MO KIO 3 ROOM    04 TO 06                 67     1980    3280 2022  01   \n 6 ANG MO KIO 3 ROOM    01 TO 03                 83     1979    3600 2022  01   \n 7 ANG MO KIO 3 ROOM    01 TO 03                 67     1980    3000 2022  01   \n 8 ANG MO KIO 3 ROOM    04 TO 06                 67     1979    3330 2022  01   \n 9 ANG MO KIO 3 ROOM    04 TO 06                 67     1979    3860 2022  01   \n10 ANG MO KIO 3 ROOM    10 TO 12                 67     1980    3300 2022  01   \n# … with 24,364 more rows, and abbreviated variable names ¹​lease_commence_date,\n#   ²​resale_price_kSGD\n\n\n\n\n\n4. Exploratory Data Analytics\n\n4.1 Plotting histogram of resale price\n\nset.seed(1234)\n\ngghistostats(\n  data = Resale,\n  x = 'resale_price_kSGD',\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"resale_price (kSGD)\"\n)\n\n\n\n\n\n\n4.2 Plotting histogram of floor area\n\nset.seed(1234)\n\ngghistostats(\n  data = Resale,\n  x = 'floor_area_sqm',\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"floor_area_sqm\"\n)\n\n\n\n\n\n\n4.3 Two sample mean test on resale price between flat types\n\nggbetweenstats(\n  data = Resale,\n  x = 'flat_type', \n  y = 'resale_price_kSGD',\n  type = \"np\",\n  messages = FALSE\n)\n\n\n\n\n\n\n4.4 Box plot of resale price by flat types\n\n# Use single color\nggplot(Resale, aes(x=flat_type, y=resale_price_kSGD)) +\n  geom_boxplot(fill='#A4A4A4', color=\"black\")+\n  stat_summary(fun.y=mean, geom=\"point\") +\n  theme_classic()\n\nWarning: The `fun.y` argument of `stat_summary()` is deprecated as of ggplot2 3.3.0.\nℹ Please use the `fun` argument instead.\n\n\n\n\n# Change box plot colors by groups\np<-ggplot(Resale, aes(x=flat_type, y=resale_price_kSGD, fill=flat_type)) +\n  geom_boxplot() +\n  stat_summary(fun.y=mean, geom=\"point\", color=\"red\") +\n  theme(legend.position=\"none\")\n# Remove legend\np\n\n\n\n\n\n\n4.5 Box plot of resale price by town\n\nResale %>%\n  mutate(class = fct_reorder(town, resale_price_kSGD, .fun='mean')) %>%\n  ggplot( aes(x=reorder(town, resale_price_kSGD), y=resale_price_kSGD))+\n  geom_boxplot() +\n  stat_summary(fun.y=mean, geom=\"point\", color=\"red\") +\n  theme(legend.position=\"none\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n\n\n\n\n\n\n\n5. Analysis"
  }
]